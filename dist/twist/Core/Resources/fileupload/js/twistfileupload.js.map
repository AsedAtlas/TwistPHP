{"version":3,"file":"twistfileupload.js","sources":["../../../../../../src/fileupload/js/twistfileupload.js"],"sourcesContent":["/*!\n * TwistPHP - An open source PHP MVC framework built from the ground up.\n * Shadow Technologies Ltd.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @author     Shadow Technologies Ltd. <contact@shadow-technologies.co.uk>\n * @license    https://www.gnu.org/licenses/gpl.html GPL License\n * @link       https://twistphp.com\n */\n\nclass Element {\n\tconstructor( el ) {\n\t\tthis.el = el;\n\t\treturn this;\n\t}\n\n\tstatic create( tag, classes = [], attributes = {}, html = '' ) {\n\t\tconst el = document.createElement( tag );\n\n\t\tif( classes ) {\n\t\t\ttry {\n\t\t\t\tel.className = classes.join( ' ' );\n\t\t\t} catch( e ) {\n\t\t\t\tif( typeof classes === 'string' ) {\n\t\t\t\t\tel.className = classes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( attributes ) {\n\t\t\tfor( let attribute in attributes ) {\n\t\t\t\tif( attributes.hasOwnProperty( attribute ) ) {\n\t\t\t\t\tel.setAttribute( attribute, attributes[attribute] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( html ) {\n\t\t\tel.innerHTML = html;\n\t\t}\n\n\t\treturn el;\n\t}\n\n\tshow() {\n\t\tthis.toggle( true );\n\t}\n\n\thide() {\n\t\tthis.toggle();\n\t}\n\n\ttoggle( show ) {\n\t\tlet value = this.el.getAttribute( 'data-initialdisplay' );\n\t\tlet display = this.el.style.display;\n\t\tlet computedDisplay = (window.getComputedStyle ? getComputedStyle( this.el, null ) : this.el.currentStyle).display;\n\n\t\tif( show ) {\n\t\t\tif( !value &&\n\t\t\t\t\tdisplay === 'none' ) {\n\t\t\t\tthis.el.style.display = '';\n\t\t\t}\n\t\t\tif( this.el.style.display === '' &&\n\t\t\t\t\tcomputedDisplay === 'none' ) {\n\t\t\t\tvalue = value || defaultDisplay( this.el.nodeName );\n\t\t\t}\n\t\t} else {\n\t\t\tif( display &&\n\t\t\t\t\tdisplay !== 'none'\n\t\t\t\t\t|| !(computedDisplay === 'none') ) {\n\t\t\t\tthis.el.setAttribute( 'data-initialdisplay', (computedDisplay === 'none') ? display : computedDisplay );\n\t\t\t}\n\t\t}\n\n\t\tif( !show ||\n\t\t\t\tthis.el.style.display === 'none' ||\n\t\t\t\tthis.el.style.display === '' ) {\n\t\t\tthis.el.style.display = show ? value || '' : 'none';\n\t\t}\n\t}\n}\n\nexport default class twistfileupload {\n\tconstructor( id, uri, name, settings = {}, preload = [] ) {\n\t\tlet uploadSupported = ( typeof new XMLHttpRequest().responseType === 'string' && 'withCredentials' in new XMLHttpRequest() );\n\n\t\tif( uploadSupported ) {\n\t\t\tlet requestTest = new XMLHttpRequest();\n\t\t\trequestTest.open( 'GET', '/' );\n\t\t\ttry {\n\t\t\t\trequestTest.responseType = 'arraybuffer';\n\t\t\t} catch( e ) {\n\t\t\t\tuploadSupported = false;\n\t\t\t}\n\t\t}\n\n\t\tlet defaultSettings = {\n\t\t\tabortable: true,\n\t\t\tacceptTypes: [],\n\t\t\tacceptExtensions: [],\n\t\t\tcounter: true,\n\t\t\tdebug: false,\n\t\t\tdragdrop: null,\n\t\t\tdragdrophoverclass: 'twistupload-drop-hover',\n\t\t\thideInput: false,\n\t\t\tinvalidtypemessage: 'This file type is not permitted',\n\t\t\tmultiple: false,\n\t\t\tonabort: () => {},\n\t\t\tonclear: () => {},\n\t\t\toncompletefile: () => {},\n\t\t\toncompletequeue: () => {},\n\t\t\tonerror: () => {},\n\t\t\toninvalidtype: () => {},\n\t\t\tonprogress: () => {},\n\t\t\tonstart: () => {},\n\t\t\tpreviewsize: 128,\n\t\t\tpreviewsquare: true\n\t\t};\n\n\t\t//this.settings = Object.assign( {}, defaultSettings, settings );\n\t\tthis.settings = {};\n\n\t\tfor( let setting in defaultSettings ) {\n\t\t\tthis.settings[setting] = settings[setting] || defaultSettings[setting];\n\t\t}\n\n\t\tthis.id = id;\n\t\tthis.elements = {\n\t\t\t// The cancel upload button\n\t\t\tCancelUpload: Element.create( 'button', '', {}, 'Cancel' ),\n\n\t\t\t// The upload count element\n\t\t\tCount: Element.create( 'span' ),\n\n\t\t\t// The total file count element\n\t\t\tCountTotal: Element.create( 'span' ),\n\n\t\t\t// The upload count wrapper element\n\t\t\tCountWrapper: Element.create( 'span' ),\n\n\t\t\t// The file input element\n\t\t\tInput: Element.create( 'input', '', (() => {\n\t\t\t\tlet attributes = {\n\t\t\t\t\ttype: 'file',\n\t\t\t\t\t//name: multiple ? name + '[]' : name,\n\t\t\t\t\taccept: this.settings.acceptTypes.concat( this.settings.acceptExtensions ).join( ',' )\n\t\t\t\t};\n\t\t\t\tif( this.settings.multiple ) {\n\t\t\t\t\tattributes.multiple = 'multiple';\n\t\t\t\t}\n\t\t\t\treturn attributes;\n\t\t\t})() ),\n\n\t\t\t// The list of uploaded files element\n\t\t\tList: Element.create( 'ul','twistupload-file-list' ),\n\n\t\t\t// The upload progress element\n\t\t\tProgress: Element.create( 'progress', '', {\n\t\t\t\tvalue: '0',\n\t\t\t\tmax: '100'\n\t\t\t} ),\n\n\t\t\t// The upload progress wrapper element\n\t\t\tProgressWrapper: Element.create( 'span' ),\n\n\t\t\t// The pseudo element containing the CSV values that will be posted\n\t\t\tPseudo: Element.create( 'input', '', {\n\t\t\t\ttype: 'hidden',\n\t\t\t\tname: name,\n\t\t\t\tvalue: this.settings.value\n\t\t\t} ),\n\n\t\t\tWrapper: document.getElementById( id )\n\t\t};\n\t\tthis.events = {};\n\t\tthis.queue = [];\n\t\tthis.queueCount = 0;\n\t\tthis.queueSize = 0;\n\t\tthis.queueUploadedCount = 0;\n\t\tthis.queueUploadedSize = 0;\n\t\tthis.request = new XMLHttpRequest();\n\t\tthis.uploaded = preload;\n\t\tthis.uri = '/' + uri.replace( /^\\//, '' ).replace( /\\/$/, '' );\n\n\t\tthis.addMarkup();\n\t\tthis.addDragAndDropListeners();\n\n\t\tif( uploadSupported ) {\n\t\t\tthis.elements.Input.addEventListener( 'change', ( e, files ) => {\n\t\t\t\tthis.upload( e, files );\n\t\t\t} );\n\t\t\tthis.updateUploadedList();\n\t\t} else {\n\t\t\tthis.hideProgress();\n\n\t\t\tconsole.warn( 'Browser does not support AJAX uploading' );\n\t\t}\n\t}\n\n\tstatic prettySize( intBytes ) {\n\t\tlet arrLimits = ['B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\t\tlet intLimit = 0;\n\n\t\twhile( arrLimits[intLimit] && intBytes > Math.pow( 1024, intLimit + 1 ) ) {\n\t\t\tintLimit++;\n\t\t}\n\n\t\treturn this.round( intBytes / Math.pow( 1024, intLimit ), ( intLimit > 1 ? 2 : 0 ) ) + arrLimits[intLimit];\n\t}\n\n\tstatic round( intNumber, intDP = 0 ) {\n\t\treturn intDP === 0 ? parseInt( Math.round( intNumber * Math.pow( 10, intDP ) ) / Math.pow( 10, intDP ) ) : parseFloat( Math.round( intNumber * Math.pow( 10, intDP ) ) / Math.pow( 10, intDP ) );\n\t}\n\n\taddMarkup() {\n\t\tthis.elements.ProgressWrapper.appendChild( this.elements.Progress );\n\t\tthis.elements.ProgressWrapper.appendChild( this.elements.CancelUpload );\n\t\tif( this.settings.multiple ) {\n\t\t\tthis.elements.CountWrapper.appendChild( this.elements.Count );\n\t\t\tthis.elements.CountWrapper.insertAdjacentHTML( 'beforeend', '/' );\n\t\t\tthis.elements.CountWrapper.appendChild( this.elements.CountTotal );\n\t\t\tthis.elements.ProgressWrapper.appendChild( this.elements.CountWrapper );\n\t\t}\n\t\tthis.elements.Wrapper.appendChild( this.elements.Input );\n\t\tthis.elements.Wrapper.appendChild( this.elements.Pseudo );\n\t\tthis.elements.Wrapper.appendChild( this.elements.ProgressWrapper );\n\t\tthis.elements.Wrapper.appendChild( this.elements.List );\n\t\tif( this.settings.hideInput ) {\n\t\t\tnew Element( this.elements.Input ).hide();\n\t\t}\n\n\t\tthis.hideProgress();\n\t}\n\n\taddDragAndDropListeners() {\n\t\tlet dropArea = this.elements.Wrapper;\n\t\tlet possibleDropArea = this.settings.dragdrop ? document.querySelectorAll( this.settings.dragdrop ) : [];\n\n\t\tif( possibleDropArea.length ) {\n\t\t\tdropArea = possibleDropArea[0];\n\t\t}\n\n\t\tdropArea.addEventListener( 'dragover', e => {\n\t\t\te.stopPropagation();\n\t\t\te.preventDefault();\n\t\t\tconsole.log( 'DRAG OVER' )\n\t\t\tdropArea.classList.add( this.settings.dragdrophoverclass );\n\t\t}, false );\n\t\tdropArea.addEventListener( 'dragleave', e => {\n\t\t\te.stopPropagation();\n\t\t\te.preventDefault();\n\t\t\tconsole.log( 'DRAG LEAVE' )\n\t\t\tdropArea.classList.remove( this.settings.dragdrophoverclass );\n\t\t}, false );\n\t\tdropArea.addEventListener( 'drop', e => {\n\t\t\te.stopPropagation();\n\t\t\te.preventDefault();\n\t\t\tthis.upload( e, e.target.files || e.dataTransfer.files );\n\t\t\tdropArea.classList.remove( this.settings.dragdrophoverclass );\n\t\t}, false );\n\t}\n\n\tupload( e, arrFiles ) {\n\t\ttry {\n\t\t\tif( e ) {\n\t\t\t\tlet resFiles = ( !arrFiles ? ( e.target || e.srcElement ).files : arrFiles );\n\n\t\t\t\tthis.queue.push.apply( this.queue, resFiles );\n\t\t\t\tthis.queueCount += resFiles.length;\n\n\t\t\t\tfor( let intFile = 0, intFiles = resFiles.length; intFile < intFiles; intFile++ ) {\n\t\t\t\t\tthis.queueSize += parseInt( resFiles[intFile].size );\n\t\t\t\t}\n\n\t\t\t\tif( this.elements.CountTotal ) {\n\t\t\t\t\tthis.elements.CountTotal.innerText = this.queueCount;\n\t\t\t\t}\n\n\t\t\t\t//console.log( 'Added ' + resFiles.length + ' files to the queue', 'info' );\n\t\t\t}\n\n\t\t\tif( this.queue.length ) {\n\t\t\t\tlet resFile = this.queue[0];\n\t\t\t\tlet strFileName = resFile.name;\n\t\t\t\tlet strFileType = resFile.type;\n\t\t\t\tlet strFileExtention = strFileName.substr( strFileName.lastIndexOf( '.' ) + 1 ).toLowerCase();\n\t\t\t\tlet intFileSize = parseInt( resFile.size );\n\t\t\t\tlet resFileReader = new FileReader( {blob: true} );\n\t\t\t\tlet blAcceptedType = !this.settings.acceptTypes.length && !this.settings.acceptExtensions.length;\n\n\t\t\t\tif( !blAcceptedType ) {\n\t\t\t\t\tfor( let typeIndex in this.settings.acceptTypes ) {\n\t\t\t\t\t\tlet type = this.settings.acceptTypes[typeIndex];\n\t\t\t\t\t\tif( new RegExp( '^' + type.replace( '*', '.*' ) + '$', 'gi' ).test( strFileType ) ) {\n\t\t\t\t\t\t\tblAcceptedType = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif( !blAcceptedType ) {\n\t\t\t\t\tif( this.settings.acceptExtensions.indexOf( '.' + strFileExtention ) !== -1 ) {\n\t\t\t\t\t\tblAcceptedType = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor( let extentionIndex in this.settings.acceptExtensions ) {\n\t\t\t\t\t\tlet extention = this.settings.acceptExtensions[extentionIndex]\n\t\t\t\t\t\tif( strFileExtention === extention ) {\n\t\t\t\t\t\t\tblAcceptedType = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif( blAcceptedType ) {\n\t\t\t\t\tthis.settings.onstart( resFile );\n\t\t\t\t\tthis.showProgress();\n\n\t\t\t\t\tif( this.elements.Count ) {\n\t\t\t\t\t\tthis.elements.Count.innerText = this.queueUploadedCount + 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( this.queueCount === 1 ) {\n\t\t\t\t\t\tif( this.elements.Progress ) {\n\t\t\t\t\t\t\tthis.elements.Progress.removeAttribute( 'value' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnew Element( this.elements.CountWrapper ).hide();\n\t\t\t\t\t} else if( this.elements.CountWrapper ) {\n\t\t\t\t\t\tnew Element( this.elements.CountWrapper ).show();\n\t\t\t\t\t}\n\n\t\t\t\t\tresFileReader.addEventListener( 'load', e => {\n\t\t\t\t\t\t\t\tthis.request.onreadystatechange = () => {\n\t\t\t\t\t\t\t\t\tswitch( this.request.status ) {\n\t\t\t\t\t\t\t\t\t\tcase 200:\n\t\t\t\t\t\t\t\t\t\t\tif( this.request.readyState === 4 ) {\n\t\t\t\t\t\t\t\t\t\t\t\t//console.info( 'Uploaded ' + strFileName + ' (' + twistfileupload.prettySize( intFileSize ) + ')' );\n\n\t\t\t\t\t\t\t\t\t\t\t\tthis.queue.shift();\n\t\t\t\t\t\t\t\t\t\t\t\tthis.queueUploadedCount++;\n\t\t\t\t\t\t\t\t\t\t\t\tthis.queueUploadedSize += intFileSize;\n\n\t\t\t\t\t\t\t\t\t\t\t\tlet jsonResponse = JSON.parse( this.request.responseText );\n\n\t\t\t\t\t\t\t\t\t\t\t\tif( this.queue.length ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif( this.settings.multiple ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.uploaded.push( jsonResponse );\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.uploaded = [jsonResponse.form_value];\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.updateUploadedList();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif( window.twist && window.twist.debug ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twindow.twist.debug.logFileUpload( resFile, jsonResponse );\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.settings.oncompletefile( jsonResponse, resFile );\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.upload();\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.hideProgress();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t//console.info( 'Finished uploading ' + this.queueUploadedCount + ' files (' + twistfileupload.prettySize( this.queueUploadedSize ) + ')', 'info' );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.queueCount = 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.queueSize = 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.queueUploadedCount = 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.queueUploadedSize = 0;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.clearInput();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif( this.settings.multiple ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.uploaded.push( jsonResponse );\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.uploaded = [jsonResponse];\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.updateUploadedList();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif( window.twist && window.twist.debug ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twindow.twist.debug.logFileUpload( resFile, jsonResponse );\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.settings.oncompletefile( jsonResponse, resFile );\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.settings.oncompletequeue();\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase 403:\n\t\t\t\t\t\t\t\t\t\t\tconsole.error( 'Permission denied' );\n\n\t\t\t\t\t\t\t\t\t\t\tthis.queue.shift();\n\t\t\t\t\t\t\t\t\t\t\tthis.queueCount--;\n\t\t\t\t\t\t\t\t\t\t\tthis.queueSize--;\n\n\t\t\t\t\t\t\t\t\t\t\tthis.settings.onerror( resFile );\n\n\t\t\t\t\t\t\t\t\t\t\tif( this.queue.length ) {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.upload();\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.hideProgress();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase 404:\n\t\t\t\t\t\t\t\t\t\t\tconsole.error( 'Invalid function call' );\n\n\t\t\t\t\t\t\t\t\t\t\tthis.queue.shift();\n\t\t\t\t\t\t\t\t\t\t\tthis.queueCount--;\n\t\t\t\t\t\t\t\t\t\t\tthis.queueSize--;\n\n\t\t\t\t\t\t\t\t\t\t\tthis.settings.onerror( resFile );\n\n\t\t\t\t\t\t\t\t\t\t\tif( this.queue.length ) {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.upload();\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.hideProgress();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tthis.request.onprogress = e => {\n\t\t\t\t\t\t\t\t\tif( e.lengthComputable ) {\n\t\t\t\t\t\t\t\t\t\tif( this.elements.Progress ) {\n\t\t\t\t\t\t\t\t\t\t\tlet intPercentage = Math.round( ( e.loaded / e.total ) * 100 );\n\t\t\t\t\t\t\t\t\t\t\tthis.elements.Progress.value = intPercentage;\n\n\t\t\t\t\t\t\t\t\t\t\t//console.log( twistfileupload.prettySize( e.loaded ) + '/' + twistfileupload.prettySize( e.total ) + ' (' + intPercentage + '%)' );\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tthis.settings.onprogress( resFile, e.loaded, e.total );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tthis.request.upload.onprogress = this.request.onprogress;\n\t\t\t\t\t\t\t\tthis.request.addEventListener( 'load', () => {}, false );\n\t\t\t\t\t\t\t\tthis.request.addEventListener( 'error', () => {\n\t\t\t\t\t\t\t\t\tif( this.queue.length ) {\n\t\t\t\t\t\t\t\t\t\tthis.hideProgress();\n\n\t\t\t\t\t\t\t\t\t\tthis.queue = [];\n\t\t\t\t\t\t\t\t\t\tthis.queueCount = 0;\n\t\t\t\t\t\t\t\t\t\tthis.queueSize = 0;\n\t\t\t\t\t\t\t\t\t\tthis.queueUploadedCount = 0;\n\t\t\t\t\t\t\t\t\t\tthis.queueUploadedSize = 0;\n\n\t\t\t\t\t\t\t\t\t\tthis.settings.onerror( resFile );\n\n\t\t\t\t\t\t\t\t\t\tconsole.error( 'An error occurred' );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}, false );\n\t\t\t\t\t\t\t\tthis.request.addEventListener( 'abort', () => {\n\t\t\t\t\t\t\t\t\tif( this.queue.length ) {\n\t\t\t\t\t\t\t\t\t\tthis.hideProgress();\n\n\t\t\t\t\t\t\t\t\t\tthis.queue = [];\n\t\t\t\t\t\t\t\t\t\tthis.queueCount = 0;\n\t\t\t\t\t\t\t\t\t\tthis.queueSize = 0;\n\t\t\t\t\t\t\t\t\t\tthis.queueUploadedCount = 0;\n\t\t\t\t\t\t\t\t\t\tthis.queueUploadedSize = 0;\n\n\t\t\t\t\t\t\t\t\t\tthis.settings.onabort( resFile );\n\n\t\t\t\t\t\t\t\t\t\tconsole.warn( 'Upload aborted' );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}, false );\n\t\t\t\t\t\t\t\tthis.request.open( 'PUT', this.uri, true );\n\t\t\t\t\t\t\t\tthis.request.setRequestHeader( 'Accept', '\"text/plain; charset=iso-8859-1\", \"Content-Type\": \"text/plain; charset=iso-8859-1\"' );\n\t\t\t\t\t\t\t\tthis.request.setRequestHeader( 'Twist-File', strFileName );\n\t\t\t\t\t\t\t\tthis.request.setRequestHeader( 'Twist-Length', intFileSize );\n\t\t\t\t\t\t\t\tthis.request.setRequestHeader( 'Twist-UID', this.id );\n\t\t\t\t\t\t\t\tthis.request.send( resFileReader.result );\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tresFileReader.readAsArrayBuffer( resFile );\n\t\t\t\t} else {\n\t\t\t\t\tlet objInvalidFile = this.queue.shift();\n\t\t\t\t\tthis.elements.Input.value = '';\n\n\t\t\t\t\tthis.settings.oninvalidtype( objInvalidFile, this.settings.acceptTypes, this.settings.acceptExtensions );\n\n\t\t\t\t\tconsole.error( strFileName + ' (' + strFileType + ') is not in the list of allowed types or extensions' );\n\n\t\t\t\t\tif( this.settings.acceptTypes.length ) {\n\t\t\t\t\t\tconsole.info( 'Allowed MIME types: ' + this.settings.acceptTypes.join( ', ' ) );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( this.settings.acceptExtensions.length ) {\n\t\t\t\t\t\tconsole.info( 'Allowed file extensions: ' + this.settings.acceptExtensions.join( ', ' ) );\n\t\t\t\t\t}\n\n\t\t\t\t\t//alert( this.settings.invalidtypemessage ); //TODO: Handle this without using alert()\n\n\t\t\t\t\tthis.clearInput();\n\t\t\t\t}\n\t\t\t}\n\t\t} catch( err ) {\n\t\t\tthis.hideProgress();\n\n\t\t\tthis.settings.onerror( this.queue[0] );\n\t\t\tthis.settings.onabort( this.queue[0] );\n\n\t\t\tthis.queue = [];\n\t\t\tthis.queueCount = 0;\n\t\t\tthis.queueSize = 0;\n\t\t\tthis.queueUploadedCount = 0;\n\t\t\tthis.queueUploadedSize = 0;\n\n\t\t\tconsole.error( err );\n\t\t}\n\t}\n\n\tshowProgress() {\n\t\tnew Element( this.elements.Input ).hide();\n\t\tnew Element( this.elements.ProgressWrapper ).show();\n\n\t\tif( this.elements.CancelUpload ) {\n\t\t\tthis.elements.CancelUpload.addEventListener( 'click', () => { this.cancelUpload() } );\n\t\t}\n\t}\n\n\thideProgress() {\n\t\tif( !this.settings.hideInput ) {\n\t\t\tnew Element( this.elements.Input ).show();\n\t\t}\n\t\tnew Element( this.elements.ProgressWrapper ).hide();\n\n\t\tif( this.elements.CancelUpload ) {\n\t\t\tthis.elements.CancelUpload.removeEventListener( 'click', () => { this.cancelUpload() } );\n\t\t}\n\t}\n\n\tclearInput() {\n\t\tthis.elements.Input.value = '';\n\n\t\tif( this.elements.Input.value ) {\n\t\t\tthis.elements.Input.type = 'text';\n\t\t\tthis.elements.Input.type = 'file';\n\t\t}\n\n\t\tthis.elements.Pseudo.value = '';\n\t\tthis.settings.onclear();\n\t}\n\n\tcancelUpload() {\n\t\tthis.request.abort();\n\t\tthis.clearInput();\n\t}\n\n\tupdateUploadedList() {\n\t\tlet arrUploadedFormValues = [];\n\n\t\tthis.elements.List.innerHTML = '';\n\n\t\tconsole.log( this.uploaded );\n\n\t\tfor( let objUploadedFileIndex in this.uploaded ) {\n\t\t\tlet objUploadedFile = this.uploaded[objUploadedFileIndex];\n\t\t\tlet strFilePreview = objUploadedFile.uri_preview;\n\t\t\tlet strFileDetails = '';\n\t\t\tlet arrFileDetails = ['file/name', 'file/size', 'file_type'];\n\t\t\tlet strPreview = 'thumb-' + this.settings.previewsize;\n\n\t\t\tarrUploadedFormValues.push( objUploadedFile.form_value );\n\n\t\t\tif( this.settings.previewsquare ) {\n\t\t\t\tstrPreview = 'square-' + strPreview;\n\t\t\t}\n\n\t\t\tif( objUploadedFile.support &&\n\t\t\t\t\tobjUploadedFile.support[strPreview] ) {\n\t\t\t\tstrFilePreview = objUploadedFile.support[strPreview];\n\t\t\t}\n\n\t\t\tfor( let intFileDetail in arrFileDetails ) {\n\t\t\t\tlet strFileDetail = arrFileDetails[intFileDetail];\n\t\t\t\tlet strProperty;\n\n\t\t\t\tif( strFileDetail.indexOf( '/' ) !== -1 ) {\n\t\t\t\t\tlet arrDelve = strFileDetail.split( '/' );\n\t\t\t\t\tlet objToDelve = objUploadedFile[arrDelve[0]] || null;\n\n\t\t\t\t\tarrDelve.shift();\n\n\t\t\t\t\tif( objToDelve ) {\n\t\t\t\t\t\tfor( let intKeyPart in arrDelve ) {\n\t\t\t\t\t\t\tobjToDelve = objToDelve[arrDelve[intKeyPart]] || null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstrProperty = objToDelve || null;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstrProperty = objUploadedFile[strFileDetail] || null;\n\t\t\t\t}\n\n\t\t\t\tstrFileDetails += '<li data-key=\"' + strFileDetail + '\"><span>' + strFileDetail.replace( /[\\/_]/g, ' ' ) + ' :</span>' + strProperty + '</li>';\n\t\t\t\t//strFileDetails += '<dt data-key=\"'+strFileDetail+'\">'+strFileDetail.replace( /[\\/_]/g, ' ' )+'</dt><dd>' + strProperty + '</dd>';\n\t\t\t}\n\n\t\t\tlet listItem = Element.create( 'li', 'twistupload-file-list-item' );\n\t\t\tlet listItemPreview = Element.create( 'img', '', {src: strFilePreview} );\n\t\t\tlet listItemInfo = Element.create( 'ul', 'twistupload-file-list-item-info', {}, strFileDetails );\n\t\t\tlet listItemRemoveButton = Element.create( 'button', 'button', {}, 'Remove' );\n\n\t\t\tlistItemRemoveButton.addEventListener( 'click', (fileToRemove => {\n\t\t\t\treturn () => {\n\t\t\t\t\tthis.uploaded.splice( this.uploaded.indexOf( fileToRemove ), 1 );\n\t\t\t\t\tthis.updateUploadedList();\n\t\t\t\t}\n\t\t\t})( objUploadedFile ) );\n\n\t\t\tlistItem.appendChild( listItemPreview );\n\t\t\tlistItem.appendChild( listItemInfo );\n\t\t\tlistItem.appendChild( listItemRemoveButton );\n\n\t\t\tthis.elements.List.appendChild( listItem );\n\t\t}\n\n\t\tthis.elements.Pseudo.value = JSON.stringify( arrUploadedFormValues );\n\t}\n\n\ton( event, action, context = null ) {\n\t\t//TODO\n\t}\n\n\toff( event, action ) {\n\t\t//TODO\n\t}\n\n\ttrigger( event ) {\n\t\t//TODO\n\t}\n}\n"],"names":["Element","el","this","toggle","show","value","getAttribute","display","style","computedDisplay","window","getComputedStyle","currentStyle","defaultDisplay","nodeName","setAttribute","tag","classes","attributes","html","document","createElement","className","join","e","attribute","hasOwnProperty","innerHTML","id","uri","name","settings","preload","uploadSupported","XMLHttpRequest","responseType","requestTest","open","defaultSettings","setting","elements","create","_this","acceptTypes","concat","acceptExtensions","multiple","getElementById","events","queue","queueCount","queueSize","queueUploadedCount","queueUploadedSize","request","uploaded","replace","addMarkup","addDragAndDropListeners","Input","addEventListener","files","upload","updateUploadedList","hideProgress","warn","ProgressWrapper","appendChild","Progress","CancelUpload","CountWrapper","Count","insertAdjacentHTML","CountTotal","Wrapper","Pseudo","List","hideInput","hide","dropArea","possibleDropArea","dragdrop","querySelectorAll","length","stopPropagation","preventDefault","log","classList","add","_this2","dragdrophoverclass","remove","target","dataTransfer","arrFiles","resFiles","srcElement","push","apply","intFile","intFiles","parseInt","size","innerText","resFile","strFileName","strFileType","type","strFileExtention","substr","lastIndexOf","toLowerCase","intFileSize","resFileReader","FileReader","blob","blAcceptedType","typeIndex","RegExp","test","extentionIndex","indexOf","onstart","showProgress","removeAttribute","onreadystatechange","_this3","status","readyState","shift","jsonResponse","JSON","parse","responseText","form_value","twist","debug","logFileUpload","oncompletefile","clearInput","oncompletequeue","error","onerror","onprogress","lengthComputable","intPercentage","Math","round","loaded","total","onabort","setRequestHeader","send","result","readAsArrayBuffer","objInvalidFile","oninvalidtype","info","err","cancelUpload","removeEventListener","onclear","abort","arrUploadedFormValues","objUploadedFileIndex","objUploadedFile","strFilePreview","uri_preview","strFileDetails","arrFileDetails","strPreview","previewsize","intFileDetail","previewsquare","support","strFileDetail","strProperty","arrDelve","split","objToDelve","intKeyPart","listItem","listItemPreview","src","listItemInfo","listItemRemoveButton","splice","_this6","fileToRemove","stringify","event","action","intBytes","arrLimits","intLimit","pow","intNumber","intDP","parseFloat"],"mappings":"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"}