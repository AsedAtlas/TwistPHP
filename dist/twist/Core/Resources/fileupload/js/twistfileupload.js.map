{"version":3,"file":"twistfileupload.js","sources":["../../../../../../src/fileupload/js/twistfileupload.js"],"sourcesContent":["/*!\n * TwistPHP - An open source PHP MVC framework built from the ground up.\n * Shadow Technologies Ltd.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @author     Shadow Technologies Ltd. <contact@shadow-technologies.co.uk>\n * @license    https://www.gnu.org/licenses/gpl.html GPL License\n * @link       https://twistphp.com\n */\n\nclass Element {\n\tconstructor( el ) {\n\t\tthis.el = el;\n\t\treturn this;\n\t}\n\n\tstatic create( tag, classes = [], attributes = {}, html = '' ) {\n\t\tconst el = document.createElement( tag );\n\n\t\tif( classes ) {\n\t\t\ttry {\n\t\t\t\tel.className = classes.join( ' ' );\n\t\t\t} catch( e ) {\n\t\t\t\tif( typeof classes === 'string' ) {\n\t\t\t\t\tel.className = classes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( attributes ) {\n\t\t\tfor( let attribute in attributes ) {\n\t\t\t\tif( attributes.hasOwnProperty( attribute ) ) {\n\t\t\t\t\tel.setAttribute( attribute, attributes[attribute] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( html ) {\n\t\t\tel.innerHTML = html;\n\t\t}\n\n\t\treturn el;\n\t}\n\n\tshow() {\n\t\tthis.toggle( true );\n\t}\n\n\thide() {\n\t\tthis.toggle();\n\t}\n\n\ttoggle( show ) {\n\t\tlet value = this.el.getAttribute( 'data-initialdisplay' ),\n\t\t\t\tdisplay = this.el.style.display,\n\t\t\t\tcomputedDisplay = (window.getComputedStyle ? getComputedStyle( this.el, null ) : this.el.currentStyle).display;\n\n\t\tif( show ) {\n\t\t\tif( !value &&\n\t\t\t\t\tdisplay === 'none' ) {\n\t\t\t\tthis.el.style.display = '';\n\t\t\t}\n\t\t\tif( this.el.style.display === '' &&\n\t\t\t\t\tcomputedDisplay === 'none' ) {\n\t\t\t\tvalue = value || defaultDisplay( this.el.nodeName );\n\t\t\t}\n\t\t} else {\n\t\t\tif( display &&\n\t\t\t\t\tdisplay !== 'none'\n\t\t\t\t\t|| !(computedDisplay === 'none') ) {\n\t\t\t\tthis.el.setAttribute( 'data-initialdisplay', (computedDisplay === 'none') ? display : computedDisplay );\n\t\t\t}\n\t\t}\n\n\t\tif( !show ||\n\t\t\t\tthis.el.style.display === 'none' ||\n\t\t\t\tthis.el.style.display === '' ) {\n\t\t\tthis.el.style.display = show ? value || '' : 'none';\n\t\t}\n\t}\n}\n\nexport default class twistfileupload {\n\tconstructor( id, uri, name, settings = {} ) {\n\t\tlet uploadSupported = ( typeof new XMLHttpRequest().responseType === 'string' && 'withCredentials' in new XMLHttpRequest() );\n\n\t\tif( uploadSupported ) {\n\t\t\tlet requestTest = new XMLHttpRequest();\n\t\t\trequestTest.open( 'GET', '/' );\n\t\t\ttry {\n\t\t\t\trequestTest.responseType = 'arraybuffer';\n\t\t\t} catch( e ) {\n\t\t\t\tuploadSupported = false;\n\t\t\t}\n\t\t}\n\n\t\tthis.settings = Object.assign( {\n\t\t\tabortable: true,\n\t\t\tacceptTypes: [],\n\t\t\tacceptExtensions: [],\n\t\t\tcounter: true,\n\t\t\tdebug: false,\n\t\t\tdragdrop: null,\n\t\t\tdragdrophoverclass: 'twistupload-drop-hover',\n\t\t\thideInput: false,\n\t\t\tinvalidtypemessage: 'This file type is not permitted',\n\t\t\tmultiple: false,\n\t\t\tonabort: () => {},\n\t\t\tonclear: () => {},\n\t\t\toncompletefile: () => {},\n\t\t\toncompletequeue: () => {},\n\t\t\tonerror: () => {},\n\t\t\toninvalidtype: () => {},\n\t\t\tonprogress: () => {},\n\t\t\tonstart: () => {},\n\t\t\tpreviewsize: 128,\n\t\t\tpreviewsquare: true\n\t\t}, settings );\n\n\t\tthis.id = id;\n\t\tthis.elements = {\n\t\t\t// The cancel upload button\n\t\t\tCancelUpload: Element.create( 'button', '', {}, 'Cancel' ),\n\n\t\t\t// The upload count element\n\t\t\tCount: Element.create( 'span' ),\n\n\t\t\t// The total file count element\n\t\t\tCountTotal: Element.create( 'span' ),\n\n\t\t\t// The upload count wrapper element\n\t\t\tCountWrapper: Element.create( 'span' ),\n\n\t\t\t// The file input element\n\t\t\tInput: Element.create( 'input', '', (() => {\n\t\t\t\tlet attributes = {\n\t\t\t\t\ttype: 'file',\n\t\t\t\t\t//name: multiple ? name + '[]' : name,\n\t\t\t\t\taccept: this.settings.acceptTypes.concat( this.settings.acceptExtensions ).join( ',' )\n\t\t\t\t};\n\t\t\t\tif( this.settings.multiple ) {\n\t\t\t\t\tattributes.multiple = 'multiple';\n\t\t\t\t}\n\t\t\t\treturn attributes;\n\t\t\t})() ),\n\n\t\t\t// The list of uploaded files element\n\t\t\tList: Element.create( 'ul' ),\n\n\t\t\t// The upload progress element\n\t\t\tProgress: Element.create( 'progress', '', {\n\t\t\t\tvalue: '0',\n\t\t\t\tmax: '100'\n\t\t\t} ),\n\n\t\t\t// The upload progress wrapper element\n\t\t\tProgressWrapper: Element.create( 'span' ),\n\n\t\t\t// The pseudo element containing the CSV values that will be posted\n\t\t\tPseudo: Element.create( 'input', '', {\n\t\t\t\ttype: 'hidden',\n\t\t\t\tname: name,\n\t\t\t\tvalue: ''\n\t\t\t} ),\n\n\t\t\tWrapper: document.getElementById( id )\n\t\t};\n\t\tthis.events = {};\n\t\tthis.queue = [];\n\t\tthis.queueCount = 0;\n\t\tthis.queueSize = 0;\n\t\tthis.queueUploadedCount = 0;\n\t\tthis.queueUploadedSize = 0;\n\t\tthis.request = new XMLHttpRequest();\n\t\tthis.uploaded = [];\n\t\tthis.uri = '/' + uri.replace( /^\\//, '' ).replace( /\\/$/, '' );\n\n\t\tthis.addMarkup();\n\t\tthis.addDragAndDropListeners();\n\n\t\tif( uploadSupported ) {\n\t\t\tthis.elements.Input.addEventListener( 'change', ( e, files ) => {\n\t\t\t\tthis.upload( e, files );\n\t\t\t} );\n\t\t} else {\n\t\t\tthis.hideProgress();\n\n\t\t\tconsole.warn( 'Browser does not support AJAX uploading' );\n\t\t}\n\t}\n\n\tstatic prettySize( intBytes ) {\n\t\tlet arrLimits = ['B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n\t\t\t\tintLimit = 0;\n\n\t\twhile( arrLimits[intLimit] && intBytes > Math.pow( 1024, intLimit + 1 ) ) {\n\t\t\tintLimit++;\n\t\t}\n\n\t\treturn this.round( intBytes / Math.pow( 1024, intLimit ), ( intLimit > 1 ? 2 : 0 ) ) + arrLimits[intLimit];\n\t}\n\n\tstatic round( intNumber, intDP = 0 ) {\n\t\treturn intDP === 0 ? parseInt( Math.round( intNumber * Math.pow( 10, intDP ) ) / Math.pow( 10, intDP ) ) : parseFloat( Math.round( intNumber * Math.pow( 10, intDP ) ) / Math.pow( 10, intDP ) );\n\t}\n\n\taddMarkup() {\n\t\tthis.elements.ProgressWrapper.appendChild( this.elements.Progress );\n\t\tthis.elements.ProgressWrapper.appendChild( this.elements.CancelUpload );\n\t\tif( this.settings.multiple ) {\n\t\t\tthis.elements.CountWrapper.appendChild( this.elements.Count );\n\t\t\tthis.elements.CountWrapper.insertAdjacentHTML( 'beforeend', '/' );\n\t\t\tthis.elements.CountWrapper.appendChild( this.elements.CountTotal );\n\t\t\tthis.elements.ProgressWrapper.appendChild( this.elements.CountWrapper );\n\t\t}\n\t\tthis.elements.Wrapper.appendChild( this.elements.Input );\n\t\tthis.elements.Wrapper.appendChild( this.elements.Pseudo );\n\t\tthis.elements.Wrapper.appendChild( this.elements.ProgressWrapper );\n\t\tthis.elements.Wrapper.appendChild( this.elements.List );\n\t\tif( this.settings.hideInput ) {\n\t\t\tnew Element( this.elements.Input ).hide();\n\t\t}\n\n\t\tthis.hideProgress();\n\t}\n\n\taddDragAndDropListeners() {\n\t\tlet dropArea = this.elements.Wrapper;\n\t\tlet possibleDropArea = this.settings.dragdrop ? document.querySelectorAll( this.settings.dragdrop ) : [];\n\n\t\tif( possibleDropArea.length ) {\n\t\t\tdropArea = possibleDropArea[0];\n\t\t}\n\n\t\tdropArea.addEventListener( 'dragover', e => {\n\t\t\te.stopPropagation();\n\t\t\te.preventDefault();\n\t\t\tconsole.log( 'DRAG OVER' )\n\t\t\tdropArea.classList.add( this.settings.dragdrophoverclass );\n\t\t}, false );\n\t\tdropArea.addEventListener( 'dragleave', e => {\n\t\t\te.stopPropagation();\n\t\t\te.preventDefault();\n\t\t\tconsole.log( 'DRAG LEAVE' )\n\t\t\tdropArea.classList.remove( this.settings.dragdrophoverclass );\n\t\t}, false );\n\t\tdropArea.addEventListener( 'drop', e => {\n\t\t\te.stopPropagation();\n\t\t\te.preventDefault();\n\t\t\tthis.upload( e, e.target.files || e.dataTransfer.files );\n\t\t\tdropArea.classList.remove( this.settings.dragdrophoverclass );\n\t\t}, false );\n\t}\n\n\tupload( e, arrFiles ) {\n\t\ttry {\n\t\t\tif( e ) {\n\t\t\t\tlet resFiles = ( !arrFiles ? ( e.target || e.srcElement ).files : arrFiles );\n\n\t\t\t\tthis.queue.push.apply( this.queue, resFiles );\n\t\t\t\tthis.queueCount += resFiles.length;\n\n\t\t\t\tfor( let intFile = 0, intFiles = resFiles.length; intFile < intFiles; intFile++ ) {\n\t\t\t\t\tthis.queueSize += parseInt( resFiles[intFile].size );\n\t\t\t\t}\n\n\t\t\t\tif( this.elements.CountTotal ) {\n\t\t\t\t\tthis.elements.CountTotal.innerText = this.queueCount;\n\t\t\t\t}\n\n\t\t\t\t//console.log( 'Added ' + resFiles.length + ' files to the queue', 'info' );\n\t\t\t}\n\n\t\t\tif( this.queue.length ) {\n\t\t\t\tlet resFile = this.queue[0],\n\t\t\t\t\t\tstrFileName = resFile.name,\n\t\t\t\t\t\tstrFileType = resFile.type,\n\t\t\t\t\t\tstrFileExtention = strFileName.substr( strFileName.lastIndexOf( '.' ) + 1 ).toLowerCase(),\n\t\t\t\t\t\tintFileSize = parseInt( resFile.size ),\n\t\t\t\t\t\tresFileReader = new FileReader( {blob: true} ),\n\t\t\t\t\t\tblAcceptedType = !this.settings.acceptTypes.length && !this.settings.acceptExtensions.length;\n\n\t\t\t\tif( !blAcceptedType ) {\n\t\t\t\t\tfor( let type of this.settings.acceptTypes ) {\n\t\t\t\t\t\tif( new RegExp( '^' + type.replace( '*', '.*' ) + '$', 'gi' ).test( strFileType ) ) {\n\t\t\t\t\t\t\tblAcceptedType = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif( !blAcceptedType ) {\n\t\t\t\t\tif( this.settings.acceptExtensions.indexOf( '.' + strFileExtention ) !== -1 ) {\n\t\t\t\t\t\tblAcceptedType = true;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfor( let extention of this.settings.acceptExtensions ) {\n\n\t\t\t\t\t\tif( strFileExtention === extention ) {\n\t\t\t\t\t\t\tblAcceptedType = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif( blAcceptedType ) {\n\t\t\t\t\tthis.settings.onstart( resFile );\n\t\t\t\t\tthis.showProgress();\n\n\t\t\t\t\tif( this.elements.Count ) {\n\t\t\t\t\t\tthis.elements.Count.innerText = this.queueUploadedCount + 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( this.queueCount === 1 ) {\n\t\t\t\t\t\tif( this.elements.Progress ) {\n\t\t\t\t\t\t\tthis.elements.Progress.removeAttribute( 'value' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnew Element( this.elements.CountWrapper ).hide();\n\t\t\t\t\t} else if( this.elements.CountWrapper ) {\n\t\t\t\t\t\tnew Element( this.elements.CountWrapper ).show();\n\t\t\t\t\t}\n\n\t\t\t\t\tresFileReader.addEventListener( 'load',\n\t\t\t\t\t\t\te => {\n\t\t\t\t\t\t\t\tthis.request.onreadystatechange = () => {\n\t\t\t\t\t\t\t\t\tswitch( this.request.status ) {\n\t\t\t\t\t\t\t\t\t\tcase 200:\n\t\t\t\t\t\t\t\t\t\t\tif( this.request.readyState === 4 ) {\n\t\t\t\t\t\t\t\t\t\t\t\t//console.info( 'Uploaded ' + strFileName + ' (' + twistfileupload.prettySize( intFileSize ) + ')' );\n\n\t\t\t\t\t\t\t\t\t\t\t\tthis.queue.shift();\n\t\t\t\t\t\t\t\t\t\t\t\tthis.queueUploadedCount++;\n\t\t\t\t\t\t\t\t\t\t\t\tthis.queueUploadedSize += intFileSize;\n\n\t\t\t\t\t\t\t\t\t\t\t\tlet jsonResponse = JSON.parse( this.request.responseText );\n\n\t\t\t\t\t\t\t\t\t\t\t\tif( this.queue.length ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif( this.settings.multiple ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.uploaded.push( jsonResponse );\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.uploaded = [jsonResponse.form_value];\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.updateUploadedList();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif( window.twist.debug ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twindow.twist.debug.logFileUpload( resFile, jsonResponse );\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.settings.oncompletefile( jsonResponse, resFile );\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.upload();\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.hideProgress();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t//console.info( 'Finished uploading ' + this.queueUploadedCount + ' files (' + twistfileupload.prettySize( this.queueUploadedSize ) + ')', 'info' );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.queueCount = 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.queueSize = 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.queueUploadedCount = 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.queueUploadedSize = 0;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.clearInput();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif( this.settings.multiple ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.uploaded.push( jsonResponse );\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.uploaded = [jsonResponse];\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.updateUploadedList();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif( window.twist.debug ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twindow.twist.debug.logFileUpload( resFile, jsonResponse );\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.settings.oncompletefile( jsonResponse, resFile );\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.settings.oncompletequeue();\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase 403:\n\t\t\t\t\t\t\t\t\t\t\tconsole.error( 'Permission denied' );\n\n\t\t\t\t\t\t\t\t\t\t\tthis.queue.shift();\n\t\t\t\t\t\t\t\t\t\t\tthis.queueCount--;\n\t\t\t\t\t\t\t\t\t\t\tthis.queueSize--;\n\n\t\t\t\t\t\t\t\t\t\t\tthis.settings.onerror( resFile );\n\n\t\t\t\t\t\t\t\t\t\t\tif( this.queue.length ) {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.upload();\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.hideProgress();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase 404:\n\t\t\t\t\t\t\t\t\t\t\tconsole.error( 'Invalid function call' );\n\n\t\t\t\t\t\t\t\t\t\t\tthis.queue.shift();\n\t\t\t\t\t\t\t\t\t\t\tthis.queueCount--;\n\t\t\t\t\t\t\t\t\t\t\tthis.queueSize--;\n\n\t\t\t\t\t\t\t\t\t\t\tthis.settings.onerror( resFile );\n\n\t\t\t\t\t\t\t\t\t\t\tif( this.queue.length ) {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.upload();\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.hideProgress();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tthis.request.onprogress = e => {\n\t\t\t\t\t\t\t\t\tif( e.lengthComputable ) {\n\t\t\t\t\t\t\t\t\t\tif( this.elements.Progress ) {\n\t\t\t\t\t\t\t\t\t\t\tlet intPercentage = Math.round( ( e.loaded / e.total ) * 100 );\n\t\t\t\t\t\t\t\t\t\t\tthis.elements.Progress.value = intPercentage;\n\n\t\t\t\t\t\t\t\t\t\t\t//console.log( twistfileupload.prettySize( e.loaded ) + '/' + twistfileupload.prettySize( e.total ) + ' (' + intPercentage + '%)' );\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tthis.settings.onprogress( resFile, e.loaded, e.total );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tthis.request.upload.onprogress = this.request.onprogress;\n\t\t\t\t\t\t\t\tthis.request.addEventListener( 'load', () => {}, false );\n\t\t\t\t\t\t\t\tthis.request.addEventListener( 'error', () => {\n\t\t\t\t\t\t\t\t\tif( this.queue.length ) {\n\t\t\t\t\t\t\t\t\t\tthis.hideProgress();\n\n\t\t\t\t\t\t\t\t\t\tthis.queue = [];\n\t\t\t\t\t\t\t\t\t\tthis.queueCount = 0;\n\t\t\t\t\t\t\t\t\t\tthis.queueSize = 0;\n\t\t\t\t\t\t\t\t\t\tthis.queueUploadedCount = 0;\n\t\t\t\t\t\t\t\t\t\tthis.queueUploadedSize = 0;\n\n\t\t\t\t\t\t\t\t\t\tthis.settings.onerror( resFile );\n\n\t\t\t\t\t\t\t\t\t\tconsole.error( 'An error occurred' );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}, false );\n\t\t\t\t\t\t\t\tthis.request.addEventListener( 'abort', () => {\n\t\t\t\t\t\t\t\t\tif( this.queue.length ) {\n\t\t\t\t\t\t\t\t\t\tthis.hideProgress();\n\n\t\t\t\t\t\t\t\t\t\tthis.queue = [];\n\t\t\t\t\t\t\t\t\t\tthis.queueCount = 0;\n\t\t\t\t\t\t\t\t\t\tthis.queueSize = 0;\n\t\t\t\t\t\t\t\t\t\tthis.queueUploadedCount = 0;\n\t\t\t\t\t\t\t\t\t\tthis.queueUploadedSize = 0;\n\n\t\t\t\t\t\t\t\t\t\tthis.settings.onabort( resFile );\n\n\t\t\t\t\t\t\t\t\t\tconsole.warn( 'Upload aborted' );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}, false );\n\t\t\t\t\t\t\t\tthis.request.open( 'PUT', this.uri, true );\n\t\t\t\t\t\t\t\tthis.request.setRequestHeader( 'Accept', '\"text/plain; charset=iso-8859-1\", \"Content-Type\": \"text/plain; charset=iso-8859-1\"' );\n\t\t\t\t\t\t\t\tthis.request.setRequestHeader( 'Twist-File', strFileName );\n\t\t\t\t\t\t\t\tthis.request.setRequestHeader( 'Twist-Length', intFileSize );\n\t\t\t\t\t\t\t\tthis.request.setRequestHeader( 'Twist-UID', this.id );\n\t\t\t\t\t\t\t\tthis.request.send( resFileReader.result );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\tresFileReader.readAsArrayBuffer( resFile );\n\t\t\t\t} else {\n\t\t\t\t\tlet objInvalidFile = this.queue.shift();\n\t\t\t\t\tthis.elements.Input.value = '';\n\n\t\t\t\t\tthis.settings.oninvalidtype( objInvalidFile, this.settings.acceptTypes, this.settings.acceptExtensions );\n\n\t\t\t\t\tconsole.error( strFileName + ' (' + strFileType + ') is not in the list of allowed types or extensions' );\n\n\t\t\t\t\tif( this.settings.acceptTypes.length ) {\n\t\t\t\t\t\tconsole.info( 'Allowed MIME types: ' + this.settings.acceptTypes.join( ', ' ) );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( this.settings.acceptExtensions.length ) {\n\t\t\t\t\t\tconsole.info( 'Allowed file extensions: ' + this.settings.acceptExtensions.join( ', ' ) );\n\t\t\t\t\t}\n\n\t\t\t\t\t//alert( this.settings.invalidtypemessage ); //TODO: Handle this without using alert()\n\n\t\t\t\t\tthis.clearInput();\n\t\t\t\t}\n\t\t\t}\n\t\t} catch( err ) {\n\t\t\tthis.hideProgress();\n\n\t\t\tthis.settings.onerror( this.queue[0] );\n\t\t\tthis.settings.onabort( this.queue[0] );\n\n\t\t\tthis.queue = [];\n\t\t\tthis.queueCount = 0;\n\t\t\tthis.queueSize = 0;\n\t\t\tthis.queueUploadedCount = 0;\n\t\t\tthis.queueUploadedSize = 0;\n\n\t\t\tconsole.error( err );\n\t\t}\n\t}\n\n\tshowProgress() {\n\t\tnew Element( this.elements.Input ).hide();\n\t\tnew Element( this.elements.ProgressWrapper ).show();\n\n\t\tif( this.elements.CancelUpload ) {\n\t\t\tthis.elements.CancelUpload.addEventListener( 'click', () => { this.cancelUpload() } );\n\t\t}\n\t}\n\n\thideProgress() {\n\t\tif( !this.settings.hideInput ) {\n\t\t\tnew Element( this.elements.Input ).show();\n\t\t}\n\t\tnew Element( this.elements.ProgressWrapper ).hide();\n\n\t\tif( this.elements.CancelUpload ) {\n\t\t\tthis.elements.CancelUpload.removeEventListener( 'click', () => { this.cancelUpload() } );\n\t\t}\n\t}\n\n\tclearInput() {\n\t\tthis.elements.Input.value = '';\n\n\t\tif( this.elements.Input.value ) {\n\t\t\tthis.elements.Input.type = 'text';\n\t\t\tthis.elements.Input.type = 'file';\n\t\t}\n\n\t\tthis.elements.Pseudo.value = '';\n\t\tthis.settings.onclear();\n\t}\n\n\tcancelUpload() {\n\t\tthis.request.abort();\n\t\tthis.clearInput();\n\t}\n\n\tupdateUploadedList() {\n\t\tlet arrUploadedFormValues = [];\n\n\t\tthis.elements.List.innerHTML = '';\n\n\t\t//console.log( this.uploaded );\n\n\t\tfor( let objUploadedFile of this.uploaded ) {\n\t\t\tlet strFilePreview = objUploadedFile.uri_preview,\n\t\t\t\t\tstrFileDetails = '',\n\t\t\t\t\tarrFileDetails = ['file/name', 'file/size', 'file_type'],\n\t\t\t\t\tstrPreview = 'thumb-' + this.settings.previewsize;\n\n\t\t\tarrUploadedFormValues.push( objUploadedFile.form_value );\n\n\t\t\tif( this.settings.previewsquare ) {\n\t\t\t\tstrPreview = 'square-' + strPreview;\n\t\t\t}\n\n\t\t\tif( objUploadedFile.support &&\n\t\t\t\t\tobjUploadedFile.support[strPreview] ) {\n\t\t\t\tstrFilePreview = objUploadedFile.support[strPreview];\n\t\t\t}\n\n\t\t\tfor( let intFileDetail in arrFileDetails ) {\n\t\t\t\tlet strFileDetail = arrFileDetails[intFileDetail],\n\t\t\t\t\t\tstrProperty;\n\n\t\t\t\tif( strFileDetail.indexOf( '/' ) !== -1 ) {\n\t\t\t\t\tlet arrDelve = strFileDetail.split( '/' ),\n\t\t\t\t\t\t\tobjToDelve = objUploadedFile[arrDelve[0]] || null;\n\n\t\t\t\t\tarrDelve.shift();\n\n\t\t\t\t\tif( objToDelve ) {\n\t\t\t\t\t\tfor( let intKeyPart in arrDelve ) {\n\t\t\t\t\t\t\tobjToDelve = objToDelve[arrDelve[intKeyPart]] || null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstrProperty = objToDelve || null;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstrProperty = objUploadedFile[strFileDetail] || null;\n\t\t\t\t}\n\n\t\t\t\tstrFileDetails += '<li data-key=\"' + strFileDetail + '\"><span>' + strFileDetail.replace( /[\\/_]/g, ' ' ) + ' :</span>' + strProperty + '</li>';\n\t\t\t}\n\n\t\t\tlet listItem = Element.create( 'li', 'twistupload-file-list-item' ),\n\t\t\t\t\tlistItemPreview = Element.create( 'img', '', {src: strFilePreview} ),\n\t\t\t\t\tlistItemInfo = Element.create( 'ul', 'twistupload-file-list-item-info', {}, strFileDetails ),\n\t\t\t\t\tlistItemRemoveButton = Element.create( 'button', '', {}, 'Remove' );\n\n\t\t\tlistItemRemoveButton.addEventListener( 'click', (fileToRemove => {\n\t\t\t\treturn () => {\n\t\t\t\t\tthis.uploaded.splice( this.uploaded.indexOf( fileToRemove ), 1 );\n\t\t\t\t\tthis.updateUploadedList();\n\t\t\t\t}\n\t\t\t})( objUploadedFile ) );\n\n\t\t\tlistItem.appendChild( listItemPreview );\n\t\t\tlistItem.appendChild( listItemInfo );\n\t\t\tlistItem.appendChild( listItemRemoveButton );\n\n\t\t\tthis.elements.List.appendChild( listItem );\n\t\t}\n\n\t\tthis.elements.Pseudo.value = JSON.stringify( arrUploadedFormValues );\n\t}\n\n\ton( event, action, context = null ) {\n\t\t//TODO\n\t}\n\n\toff( event, action ) {\n\t\t//TODO\n\t}\n\n\ttrigger( event ) {\n\t\t//TODO\n\t}\n}\n"],"names":["Element","el","this","toggle","show","value","getAttribute","display","style","computedDisplay","window","getComputedStyle","currentStyle","defaultDisplay","nodeName","setAttribute","tag","classes","attributes","html","document","createElement","className","join","e","attribute","hasOwnProperty","innerHTML","id","uri","name","settings","uploadSupported","XMLHttpRequest","responseType","requestTest","open","Object","assign","elements","create","_this","acceptTypes","concat","acceptExtensions","multiple","getElementById","events","queue","queueCount","queueSize","queueUploadedCount","queueUploadedSize","request","uploaded","replace","addMarkup","addDragAndDropListeners","Input","addEventListener","files","upload","hideProgress","warn","ProgressWrapper","appendChild","Progress","CancelUpload","CountWrapper","Count","insertAdjacentHTML","CountTotal","Wrapper","Pseudo","List","hideInput","hide","dropArea","possibleDropArea","dragdrop","querySelectorAll","length","stopPropagation","preventDefault","log","classList","add","_this2","dragdrophoverclass","remove","target","dataTransfer","arrFiles","resFiles","srcElement","push","apply","intFile","intFiles","parseInt","size","innerText","resFile","strFileName","strFileType","type","strFileExtention","substr","lastIndexOf","toLowerCase","intFileSize","resFileReader","FileReader","blob","blAcceptedType","RegExp","test","indexOf","onstart","showProgress","removeAttribute","onreadystatechange","_this3","status","readyState","shift","jsonResponse","JSON","parse","responseText","form_value","updateUploadedList","twist","debug","logFileUpload","oncompletefile","clearInput","oncompletequeue","error","onerror","onprogress","lengthComputable","intPercentage","Math","round","loaded","total","onabort","setRequestHeader","send","result","readAsArrayBuffer","objInvalidFile","oninvalidtype","info","err","cancelUpload","removeEventListener","onclear","abort","arrUploadedFormValues","objUploadedFile","strFilePreview","uri_preview","strFileDetails","arrFileDetails","strPreview","previewsize","intFileDetail","previewsquare","support","strFileDetail","strProperty","arrDelve","split","objToDelve","intKeyPart","listItem","listItemPreview","src","listItemInfo","listItemRemoveButton","splice","_this6","fileToRemove","stringify","event","action","intBytes","arrLimits","intLimit","pow","intNumber","intDP","parseFloat"],"mappings":"shBAsBMA,wBACQC,yBACPA,GAAKA,EACHC,mDAgCFC,QAAQ,uCAIRA,wCAGEC,OACHC,EAAQH,KAAKD,GAAGK,aAAc,uBAChCC,EAAUL,KAAKD,GAAGO,MAAMD,QACxBE,GAAmBC,OAAOC,iBAAmBA,iBAAkBT,KAAKD,GAAI,MAASC,KAAKD,GAAGW,cAAcL,QAErGH,GACEC,GACS,SAAZE,SACIN,GAAGO,MAAMD,QAAU,IAEK,KAA1BL,KAAKD,GAAGO,MAAMD,SACI,SAApBE,MACOJ,GAASQ,eAAgBX,KAAKD,GAAGa,aAGtCP,GACU,SAAZA,GACyB,SAApBE,SACDR,GAAGc,aAAc,sBAA4C,SAApBN,EAA8BF,EAAUE,GAInFL,GACuB,SAA1BF,KAAKD,GAAGO,MAAMD,SACY,KAA1BL,KAAKD,GAAGO,MAAMD,eACVN,GAAGO,MAAMD,QAAUH,EAAOC,GAAS,GAAK,yCA7DhCW,OAAKC,4DAAcC,4DAAiBC,yDAAO,GACnDlB,EAAKmB,SAASC,cAAeL,MAE/BC,QAECK,UAAYL,EAAQM,KAAM,KAC5B,MAAOC,GACe,iBAAZP,MACPK,UAAYL,MAKdC,MACE,IAAIO,KAAaP,EACjBA,EAAWQ,eAAgBD,MAC3BV,aAAcU,EAAWP,EAAWO,WAKtCN,MACAQ,UAAYR,GAGTlB,wCA0CK2B,EAAIC,EAAKC,cAAMC,0EAoDrBb,EAnDFc,EAAiE,iBAAtC,IAAIC,gBAAiBC,cAA6B,oBAAqB,IAAID,kBAEtGD,EAAkB,KACjBG,EAAc,IAAIF,iBACVG,KAAM,MAAO,WAEZF,aAAe,cAC1B,MAAOV,MACU,QAIfO,SAAWM,OAAOC,mBACX,8CAGF,SACF,WACG,wBACU,oCACT,qBACS,4CACV,UACD,qBACA,4BACO,6BACC,qBACR,2BACM,wBACH,qBACH,yBACI,mBACE,GACbP,QAEEH,GAAKA,OACLW,uBAEUvC,EAAQwC,OAAQ,SAAU,MAAQ,gBAGzCxC,EAAQwC,OAAQ,mBAGXxC,EAAQwC,OAAQ,qBAGdxC,EAAQwC,OAAQ,cAGvBxC,EAAQwC,OAAQ,QAAS,IAC3BtB,QACG,cAEEuB,EAAKV,SAASW,YAAYC,OAAQF,EAAKV,SAASa,kBAAmBrB,KAAM,MAE9EkB,EAAKV,SAASc,aACNA,SAAW,YAEhB3B,SAIFlB,EAAQwC,OAAQ,eAGZxC,EAAQwC,OAAQ,WAAY,UAC9B,QACF,wBAIWxC,EAAQwC,OAAQ,eAGzBxC,EAAQwC,OAAQ,QAAS,SAC1B,cACAV,QACC,aAGCV,SAAS0B,eAAgBlB,SAE9BmB,eACAC,cACAC,WAAa,OACbC,UAAY,OACZC,mBAAqB,OACrBC,kBAAoB,OACpBC,QAAU,IAAIpB,oBACdqB,iBACAzB,IAAM,IAAMA,EAAI0B,QAAS,MAAO,IAAKA,QAAS,MAAO,SAErDC,iBACAC,0BAEDzB,OACEO,SAASmB,MAAMC,iBAAkB,SAAU,SAAEnC,EAAGoC,KAC/CC,OAAQrC,EAAGoC,WAGZE,uBAEGC,KAAM,+FAoBVxB,SAASyB,gBAAgBC,YAAa/D,KAAKqC,SAAS2B,eACpD3B,SAASyB,gBAAgBC,YAAa/D,KAAKqC,SAAS4B,cACrDjE,KAAK6B,SAASc,gBACZN,SAAS6B,aAAaH,YAAa/D,KAAKqC,SAAS8B,YACjD9B,SAAS6B,aAAaE,mBAAoB,YAAa,UACvD/B,SAAS6B,aAAaH,YAAa/D,KAAKqC,SAASgC,iBACjDhC,SAASyB,gBAAgBC,YAAa/D,KAAKqC,SAAS6B,oBAErD7B,SAASiC,QAAQP,YAAa/D,KAAKqC,SAASmB,YAC5CnB,SAASiC,QAAQP,YAAa/D,KAAKqC,SAASkC,aAC5ClC,SAASiC,QAAQP,YAAa/D,KAAKqC,SAASyB,sBAC5CzB,SAASiC,QAAQP,YAAa/D,KAAKqC,SAASmC,MAC7CxE,KAAK6B,SAAS4C,eACb3E,EAASE,KAAKqC,SAASmB,OAAQkB,YAG/Bd,4EAIDe,EAAW3E,KAAKqC,SAASiC,QACzBM,EAAmB5E,KAAK6B,SAASgD,SAAW3D,SAAS4D,iBAAkB9E,KAAK6B,SAASgD,aAErFD,EAAiBG,WACTH,EAAiB,MAGpBnB,iBAAkB,WAAY,cACpCuB,oBACAC,yBACMC,IAAK,eACJC,UAAUC,IAAKC,EAAKxD,SAASyD,sBACpC,KACM7B,iBAAkB,YAAa,cACrCuB,oBACAC,yBACMC,IAAK,gBACJC,UAAUI,OAAQF,EAAKxD,SAASyD,sBACvC,KACM7B,iBAAkB,OAAQ,cAChCuB,oBACAC,mBACGtB,OAAQrC,EAAGA,EAAEkE,OAAO9B,OAASpC,EAAEmE,aAAa/B,SACxCyB,UAAUI,OAAQF,EAAKxD,SAASyD,sBACvC,kCAGIhE,EAAGoE,qBAELpE,EAAI,KACHqE,EAAcD,IAAapE,EAAEkE,QAAUlE,EAAEsE,YAAalC,WAErDZ,MAAM+C,KAAKC,MAAO9F,KAAK8C,MAAO6C,QAC9B5C,YAAc4C,EAASZ,WAEvB,IAAIgB,EAAU,EAAGC,EAAWL,EAASZ,OAAQgB,EAAUC,EAAUD,SAChE/C,WAAaiD,SAAUN,EAASI,GAASG,MAG3ClG,KAAKqC,SAASgC,kBACZhC,SAASgC,WAAW8B,UAAYnG,KAAK+C,eAMxC/C,KAAK8C,MAAMiC,OAAS,KACnBqB,EAAUpG,KAAK8C,MAAM,GACvBuD,EAAcD,EAAQxE,KACtB0E,EAAcF,EAAQG,KACtBC,EAAmBH,EAAYI,OAAQJ,EAAYK,YAAa,KAAQ,GAAIC,cAC5EC,EAAcX,SAAUG,EAAQF,MAChCW,EAAgB,IAAIC,YAAaC,MAAM,IACvCC,GAAkBhH,KAAK6B,SAASW,YAAYuC,SAAW/E,KAAK6B,SAASa,iBAAiBqC,WAEnFiC,EAAiB,wCACJhH,KAAK6B,SAASW,2DAAc,KAApC+D,aACJ,IAAIU,OAAQ,IAAMV,EAAKlD,QAAS,IAAK,MAAS,IAAK,MAAO6D,KAAMZ,GAAgB,IAClE,4FAMfU,EAAiB,EACqD,IAAtEhH,KAAK6B,SAASa,iBAAiByE,QAAS,IAAMX,QAChC,0CAGIxG,KAAK6B,SAASa,gEAAmB,IAElD8D,YAAiC,IACnB,2FAMhBQ,OACEnF,SAASuF,QAAShB,QAClBiB,eAEDrH,KAAKqC,SAAS8B,aACZ9B,SAAS8B,MAAMgC,UAAYnG,KAAKiD,mBAAqB,GAGnC,IAApBjD,KAAK+C,YACJ/C,KAAKqC,SAAS2B,eACZ3B,SAAS2B,SAASsD,gBAAiB,aAGrCxH,EAASE,KAAKqC,SAAS6B,cAAeQ,QAChC1E,KAAKqC,SAAS6B,kBACpBpE,EAASE,KAAKqC,SAAS6B,cAAehE,SAG7BuD,iBAAkB,OAC9B,cACMN,QAAQoE,mBAAqB,kBACzBC,EAAKrE,QAAQsE,aACf,OAC4B,IAA5BD,EAAKrE,QAAQuE,WAAmB,GAG9B5E,MAAM6E,UACN1E,uBACAC,mBAAqB0D,MAEtBgB,EAAeC,KAAKC,MAAON,EAAKrE,QAAQ4E,cAExCP,EAAK1E,MAAMiC,QACVyC,EAAK3F,SAASc,WACZS,SAASyC,KAAM+B,KAEfxE,UAAYwE,EAAaI,cAG1BC,qBAEDzH,OAAO0H,MAAMC,cACTD,MAAMC,MAAMC,cAAehC,EAASwB,KAGvC/F,SAASwG,eAAgBT,EAAcxB,KACvCzC,aAEAC,iBAIAb,WAAa,IACbC,UAAY,IACZC,mBAAqB,IACrBC,kBAAoB,IAEpBoF,aAEDd,EAAK3F,SAASc,WACZS,SAASyC,KAAM+B,KAEfxE,UAAYwE,KAGbK,qBAEDzH,OAAO0H,MAAMC,cACTD,MAAMC,MAAMC,cAAehC,EAASwB,KAGvC/F,SAASwG,eAAgBT,EAAcxB,KACvCvE,SAAS0G,8BAKZ,YACIC,MAAO,uBAEV1F,MAAM6E,UACN5E,eACAC,cAEAnB,SAAS4G,QAASrC,GAEnBoB,EAAK1E,MAAMiC,SACTpB,WAEAC,0BAIF,YACI4E,MAAO,2BAEV1F,MAAM6E,UACN5E,eACAC,cAEAnB,SAAS4G,QAASrC,GAEnBoB,EAAK1E,MAAMiC,SACTpB,WAEAC,mBAKJT,QAAQuF,WAAa,eACrBpH,EAAEqH,iBAAmB,IACpBnB,EAAKnF,SAAS2B,SAAW,KACxB4E,EAAgBC,KAAKC,MAASxH,EAAEyH,OAASzH,EAAE0H,MAAU,OACpD3G,SAAS2B,SAAS7D,MAAQyI,IAK3B/G,SAAS6G,WAAYtC,EAAS9E,EAAEyH,OAAQzH,EAAE0H,WAG5C7F,QAAQQ,OAAO+E,WAAalB,EAAKrE,QAAQuF,aACzCvF,QAAQM,iBAAkB,OAAQ,cAAU,KAC5CN,QAAQM,iBAAkB,QAAS,WACnC+D,EAAK1E,MAAMiC,WACTnB,iBAEAd,WACAC,WAAa,IACbC,UAAY,IACZC,mBAAqB,IACrBC,kBAAoB,IAEpBrB,SAAS4G,QAASrC,WAEfoC,MAAO,wBAEd,KACErF,QAAQM,iBAAkB,QAAS,WACnC+D,EAAK1E,MAAMiC,WACTnB,iBAEAd,WACAC,WAAa,IACbC,UAAY,IACZC,mBAAqB,IACrBC,kBAAoB,IAEpBrB,SAASoH,QAAS7C,WAEfvC,KAAM,qBAEb,KACEV,QAAQjB,KAAM,MAAOsF,EAAK7F,KAAK,KAC/BwB,QAAQ+F,iBAAkB,SAAU,wFACpC/F,QAAQ+F,iBAAkB,aAAc7C,KACxClD,QAAQ+F,iBAAkB,eAAgBtC,KAC1CzD,QAAQ+F,iBAAkB,YAAa1B,EAAK9F,MAC5CyB,QAAQgG,KAAMtC,EAAcuC,YAItBC,kBAAmBjD,OAC3B,KACFkD,EAAiBtJ,KAAK8C,MAAM6E,aAC3BtF,SAASmB,MAAMrD,MAAQ,QAEvB0B,SAAS0H,cAAeD,EAAgBtJ,KAAK6B,SAASW,YAAaxC,KAAK6B,SAASa,0BAE9E8F,MAAOnC,EAAc,KAAOC,EAAc,uDAE9CtG,KAAK6B,SAASW,YAAYuC,gBACrByE,KAAM,uBAAyBxJ,KAAK6B,SAASW,YAAYnB,KAAM,OAGpErB,KAAK6B,SAASa,iBAAiBqC,gBAC1ByE,KAAM,4BAA8BxJ,KAAK6B,SAASa,iBAAiBrB,KAAM,YAK7EiH,eAGN,MAAOmB,QACH7F,oBAEA/B,SAAS4G,QAASzI,KAAK8C,MAAM,SAC7BjB,SAASoH,QAASjJ,KAAK8C,MAAM,SAE7BA,cACAC,WAAa,OACbC,UAAY,OACZC,mBAAqB,OACrBC,kBAAoB,UAEjBsF,MAAOiB,0DAKZ3J,EAASE,KAAKqC,SAASmB,OAAQkB,WAC/B5E,EAASE,KAAKqC,SAASyB,iBAAkB5D,OAEzCF,KAAKqC,SAAS4B,mBACZ5B,SAAS4B,aAAaR,iBAAkB,QAAS,aAAaiG,mEAK/D1J,KAAK6B,SAAS4C,eACd3E,EAASE,KAAKqC,SAASmB,OAAQtD,WAEhCJ,EAASE,KAAKqC,SAASyB,iBAAkBY,OAEzC1E,KAAKqC,SAAS4B,mBACZ5B,SAAS4B,aAAa0F,oBAAqB,QAAS,aAAaD,2DAKlErH,SAASmB,MAAMrD,MAAQ,GAExBH,KAAKqC,SAASmB,MAAMrD,aAClBkC,SAASmB,MAAM+C,KAAO,YACtBlE,SAASmB,MAAM+C,KAAO,aAGvBlE,SAASkC,OAAOpE,MAAQ,QACxB0B,SAAS+H,sDAITzG,QAAQ0G,aACRvB,qEAIDwB,UAECzH,SAASmC,KAAK/C,UAAY,0CAIHzB,KAAKoD,wDAAW,KAAnC2G,UACJC,EAAiBD,EAAgBE,YACnCC,EAAiB,GACjBC,GAAkB,YAAa,YAAa,aAC5CC,EAAa,SAAWpK,KAAK6B,SAASwI,gBAanC,IAAIC,OAXazE,KAAMkE,EAAgB/B,YAExChI,KAAK6B,SAAS0I,kBACJ,UAAYH,GAGtBL,EAAgBS,SAClBT,EAAgBS,QAAQJ,OACRL,EAAgBS,QAAQJ,IAGhBD,EAAiB,KACtCM,EAAgBN,EAAeG,GACjCI,aAEoC,IAAlCD,EAActD,QAAS,KAAe,KACrCwD,EAAWF,EAAcG,MAAO,KAClCC,EAAad,EAAgBY,EAAS,KAAO,UAEtChD,QAELkD,EAAa,KACX,IAAIC,KAAcH,IACTE,EAAWF,EAASG,KAAgB,OAGpCD,GAAc,aAGfd,EAAgBU,IAAkB,QAG/B,iBAAmBA,EAAgB,WAAaA,EAAcpH,QAAS,SAAU,KAAQ,YAAcqH,EAAc,YAGpIK,EAAWjL,EAAQwC,OAAQ,KAAM,8BACnC0I,EAAkBlL,EAAQwC,OAAQ,MAAO,IAAK2I,IAAKjB,IACnDkB,EAAepL,EAAQwC,OAAQ,KAAM,qCAAuC4H,GAC5EiB,EAAuBrL,EAAQwC,OAAQ,SAAU,MAAQ,YAEtCmB,iBAAkB,QAAU,mBACzC,aACDL,SAASgI,OAAQC,EAAKjI,SAAS+D,QAASmE,GAAgB,KACxDrD,sBAH0C,CAK7C8B,MAEKhG,YAAaiH,KACbjH,YAAamH,KACbnH,YAAaoH,QAEjB9I,SAASmC,KAAKT,YAAagH,sFAG5B1I,SAASkC,OAAOpE,MAAQ0H,KAAK0D,UAAWzB,8BAG1C0B,EAAOC,gCAIND,EAAOC,oCAIHD,yCA9aUE,WACdC,GAAa,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC9DC,EAAW,EAEND,EAAUC,IAAaF,EAAW7C,KAAKgD,IAAK,KAAMD,EAAW,eAI7D5L,KAAK8I,MAAO4C,EAAW7C,KAAKgD,IAAK,KAAMD,GAAcA,EAAW,EAAI,EAAI,GAAQD,EAAUC,iCAGpFE,OAAWC,yDAAQ,SACf,IAAVA,EAAc9F,SAAU4C,KAAKC,MAAOgD,EAAYjD,KAAKgD,IAAK,GAAIE,IAAYlD,KAAKgD,IAAK,GAAIE,IAAYC,WAAYnD,KAAKC,MAAOgD,EAAYjD,KAAKgD,IAAK,GAAIE,IAAYlD,KAAKgD,IAAK,GAAIE"}