{"version":3,"file":"twistfileupload.js","sources":["../../../../../../../src/fileupload/js/twistfileupload.js"],"sourcesContent":["/*!\n * TwistPHP - An open source PHP MVC framework built from the ground up.\n * Shadow Technologies Ltd.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @author     Shadow Technologies Ltd. <contact@shadow-technologies.co.uk>\n * @license    https://www.gnu.org/licenses/gpl.html GPL License\n * @link       https://twistphp.com\n */\n\nclass Element {\n\tconstructor( el ) {\n\t\tthis.el = el;\n\t\treturn this;\n\t}\n\n\tstatic create( tag, classes = [], attributes = {}, html = '' ) {\n\t\tconst el = document.createElement( tag );\n\n\t\tif( classes ) {\n\t\t\ttry {\n\t\t\t\tel.className = classes.join( ' ' );\n\t\t\t} catch( e ) {\n\t\t\t\tif( typeof classes === 'string' ) {\n\t\t\t\t\tel.className = classes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( attributes ) {\n\t\t\tfor( let attribute in attributes ) {\n\t\t\t\tif( attributes.hasOwnProperty( attribute ) ) {\n\t\t\t\t\tel.setAttribute( attribute, attributes[attribute] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( html ) {\n\t\t\tel.innerHTML = html;\n\t\t}\n\n\t\treturn el;\n\t}\n\n\tshow() {\n\t\tthis.toggle( true );\n\t}\n\n\thide() {\n\t\tthis.toggle();\n\t}\n\n\ttoggle( show ) {\n\t\tlet value = this.el.getAttribute( 'data-initialdisplay' ),\n\t\t\t\tdisplay = this.el.style.display,\n\t\t\t\tcomputedDisplay = (window.getComputedStyle ? getComputedStyle( this.el, null ) : this.el.currentStyle).display;\n\n\t\tif( show ) {\n\t\t\tif( !value &&\n\t\t\t\t\tdisplay === 'none' ) {\n\t\t\t\tthis.el.style.display = '';\n\t\t\t}\n\t\t\tif( this.el.style.display === '' &&\n\t\t\t\t\tcomputedDisplay === 'none' ) {\n\t\t\t\tvalue = value || defaultDisplay( this.el.nodeName );\n\t\t\t}\n\t\t} else {\n\t\t\tif( display &&\n\t\t\t\t\tdisplay !== 'none'\n\t\t\t\t\t|| !(computedDisplay === 'none') ) {\n\t\t\t\tthis.el.setAttribute( 'data-initialdisplay', (computedDisplay === 'none') ? display : computedDisplay );\n\t\t\t}\n\t\t}\n\n\t\tif( !show ||\n\t\t\t\tthis.el.style.display === 'none' ||\n\t\t\t\tthis.el.style.display === '' ) {\n\t\t\tthis.el.style.display = show ? value || '' : 'none';\n\t\t}\n\t}\n}\n\nexport default class twistfileupload {\n\tconstructor( id, uri, name, multiple = false, settings = {} ) {\n\t\tlet uploadSupported = ( typeof new XMLHttpRequest().responseType === 'string' && 'withCredentials' in new XMLHttpRequest() );\n\n\t\tif( uploadSupported ) {\n\t\t\tlet requestTest = new XMLHttpRequest();\n\t\t\trequestTest.open( 'GET', '/' );\n\t\t\ttry {\n\t\t\t\trequestTest.responseType = 'arraybuffer';\n\t\t\t} catch( e ) {\n\t\t\t\tuploadSupported = false;\n\t\t\t}\n\t\t}\n\n\t\tthis.settings = Object.assign( {\n\t\t\tabortable: true,\n\t\t\tacceptTypes: [],\n\t\t\tacceptExtensions: [],\n\t\t\tcounter: true,\n\t\t\tdebug: false,\n\t\t\tdragdrop: null,\n\t\t\tdropableclass: 'twistupload-dropable',\n\t\t\thoverclass: 'twistupload-hover',\n\t\t\tinvalidtypemessage: 'This file type is not permitted',\n\t\t\tonabort: () => {},\n\t\t\tonclear: () => {},\n\t\t\toncompletefile: () => {},\n\t\t\toncompletequeue: () => {},\n\t\t\tonerror: () => {},\n\t\t\toninvalidtype: () => {},\n\t\t\tonprogress: () => {},\n\t\t\tonstart: () => {},\n\t\t\tpreviewsize: 128,\n\t\t\tpreviewsquare: true\n\t\t}, settings );\n\n\t\tthis.id = id;\n\t\tthis.elements = {\n\t\t\t// The cancel upload button\n\t\t\tCancelUpload: Element.create( 'button', '', {}, 'Cancel' ),\n\n\t\t\t// The upload count element\n\t\t\tCount: Element.create( 'span' ),\n\n\t\t\t// The total file count element\n\t\t\tCountTotal: Element.create( 'span' ),\n\n\t\t\t// The upload count wrapper element\n\t\t\tCountWrapper: Element.create( 'span' ),\n\n\t\t\t// The file input element\n\t\t\tInput: Element.create( 'input', '', (() => {\n\t\t\t\tlet attributes = {\n\t\t\t\t\ttype: 'file',\n\t\t\t\t\tname: multiple ? name + '[]' : name\n\t\t\t\t};\n\t\t\t\tif( multiple ) {\n\t\t\t\t\tattributes.multiple = 'multiple';\n\t\t\t\t}\n\t\t\t\treturn attributes;\n\t\t\t})() ),\n\n\t\t\t// The list of uploaded files element\n\t\t\tList: Element.create( 'ul' ),\n\n\t\t\t// The upload progress element\n\t\t\tProgress: Element.create( 'progress', '', {\n\t\t\t\tvalue: '0',\n\t\t\t\tmax: '100'\n\t\t\t} ),\n\n\t\t\t// The upload progress wrapper element\n\t\t\tProgressWrapper: Element.create( 'span' ),\n\n\t\t\t// The pseudo element containing the CSV values that will be posted\n\t\t\tPseudo: Element.create( 'input', '', {\n\t\t\t\ttype: 'hidden',\n\t\t\t\tvalue: ''\n\t\t\t} ),\n\n\t\t\tWrapper: document.getElementById( id )\n\t\t};\n\t\tthis.events = {};\n\t\tthis.multiple = multiple;\n\t\tthis.queue = [];\n\t\tthis.queueCount = 0;\n\t\tthis.queueSize = 0;\n\t\tthis.queueUploadedCount = 0;\n\t\tthis.queueUploadedSize = 0;\n\t\tthis.request = new XMLHttpRequest();\n\t\tthis.uploaded = [];\n\t\tthis.uri = '/' + uri.replace( /^\\//, '' ).replace( /\\/$/, '' );\n\n\t\tthis.addMarkup();\n\t\tthis.addDragAndDropListeners();\n\n\t\tif( uploadSupported ) {\n\t\t\tthis.elements.Input.addEventListener( 'change', ( e, files ) => {\n\t\t\t\tthis.upload( e, files );\n\t\t\t} );\n\n\t\t\t//this.elements.Input.addEventListener( 'change', this.upload );\n\t\t} else {\n\t\t\tthis.hideProgress();\n\n\t\t\tconsole.warn( 'Your browser does not support AJAX uploading', 'warn', true );\n\t\t}\n\t}\n\n\tstatic prettySize( intBytes ) {\n\t\tlet arrLimits = ['B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n\t\t\t\tintLimit = 0;\n\n\t\twhile( arrLimits[intLimit] && intBytes > Math.pow( 1024, intLimit + 1 ) ) {\n\t\t\tintLimit++;\n\t\t}\n\n\t\treturn this.round( intBytes / Math.pow( 1024, intLimit ), ( intLimit > 1 ? 2 : 0 ) ) + arrLimits[intLimit];\n\t}\n\n\tstatic round( intNumber, intDP = 0 ) {\n\t\treturn intDP === 0 ? parseInt( Math.round( intNumber * Math.pow( 10, intDP ) ) / Math.pow( 10, intDP ) ) : parseFloat( Math.round( intNumber * Math.pow( 10, intDP ) ) / Math.pow( 10, intDP ) );\n\t}\n\n\taddMarkup() {\n\t\tthis.elements.ProgressWrapper.appendChild( this.elements.Progress );\n\t\tthis.elements.ProgressWrapper.appendChild( this.elements.CancelUpload );\n\t\tif( this.multiple ) {\n\t\t\tthis.elements.CountWrapper.appendChild( this.elements.Count );\n\t\t\tthis.elements.CountWrapper.insertAdjacentHTML( 'beforeend', '/' );\n\t\t\tthis.elements.CountWrapper.appendChild( this.elements.CountTotal );\n\t\t\tthis.elements.ProgressWrapper.appendChild( this.elements.CountWrapper );\n\t\t}\n\t\tthis.elements.Wrapper.appendChild( this.elements.Input );\n\t\tthis.elements.Wrapper.appendChild( this.elements.Pseudo );\n\t\tthis.elements.Wrapper.appendChild( this.elements.ProgressWrapper );\n\t\tthis.elements.Wrapper.appendChild( this.elements.List );\n\n\t\tthis.hideProgress();\n\t}\n\n\taddDragAndDropListeners() {\n\t\tlet dropArea = this.elements.Wrapper;\n\n\t\tif( this.settings.dragdrop ) {\n\t\t\tdropArea = document.getElementById( this.settings.dragdrop );\n\t\t}\n\n\t\tdropArea.ondrop = e => {\n\t\t\te.preventDefault();\n\t\t\tthis.upload( e, e.target.files || e.dataTransfer.files );\n\n\t\t\tdropArea.classList.remove( this.settings.hoverclass );\n\t\t\tdropArea.classList.remove( this.settings.dropableclass );\n\t\t};\n\t\tdropArea.ondragstart = () => {\n\t\t\tdropArea.classList.add( this.settings.dropableclass );\n\t\t\treturn false;\n\t\t};\n\t\tdropArea.ondragover = () => {\n\t\t\tdropArea.classList.add( this.settings.hoverclass );\n\t\t\treturn false;\n\t\t};\n\t\tdropArea.ondragleave = () => {\n\t\t\tdropArea.classList.remove( this.settings.hoverclass );\n\t\t\treturn false;\n\t\t};\n\t\tdropArea.ondragend = () => {\n\t\t\tdropArea.classList.remove( this.settings.hoverclass );\n\t\t\tdropArea.classList.remove( this.settings.dropableclass );\n\t\t\treturn false;\n\t\t};\n\t}\n\n\tupload( e, arrFiles ) {\n\t\ttry {\n\t\t\tif( e ) {\n\t\t\t\tlet resFiles = ( !arrFiles ? ( e.target || e.srcElement ).files : arrFiles );\n\n\t\t\t\tthis.queue.push.apply( this.queue, resFiles );\n\t\t\t\tthis.queueCount += resFiles.length;\n\n\t\t\t\tfor( let intFile = 0, intFiles = resFiles.length; intFile < intFiles; intFile++ ) {\n\t\t\t\t\tthis.queueSize += parseInt( resFiles[intFile].size );\n\t\t\t\t}\n\n\t\t\t\tif( this.elements.CountTotal ) {\n\t\t\t\t\tthis.elements.CountTotal.innerText = this.queueCount;\n\t\t\t\t}\n\n\t\t\t\tconsole.log( 'Added ' + resFiles.length + ' files to the queue', 'info' );\n\t\t\t}\n\n\t\t\tif( this.queue.length ) {\n\t\t\t\tlet resFile = this.queue[0],\n\t\t\t\t\t\tstrFileName = resFile.name,\n\t\t\t\t\t\tstrFileType = resFile.type,\n\t\t\t\t\t\tstrFileExtention = strFileName.substr( strFileName.lastIndexOf( '.' ) + 1 ).toLowerCase(),\n\t\t\t\t\t\tintFileSize = parseInt( resFile.size ),\n\t\t\t\t\t\tresFileReader = new FileReader( {blob: true} ),\n\t\t\t\t\t\tblAcceptedType = !this.settings.acceptTypes.length && !this.settings.acceptExtensions.length;\n\n\t\t\t\tif( !blAcceptedType ) {\n\t\t\t\t\tfor( let type of this.settings.acceptTypes ) {\n\t\t\t\t\t\tif( new RegExp( '^' + type + '$', 'gi' ).test( strFileType ) ) {\n\t\t\t\t\t\t\tblAcceptedType = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif( !blAcceptedType ) {\n\t\t\t\t\tfor( let extention of this.settings.acceptExtensions ) {\n\t\t\t\t\t\tif( strFileExtention === extention ) {\n\t\t\t\t\t\t\tblAcceptedType = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif( blAcceptedType ) {\n\t\t\t\t\tthis.settings.onstart( resFile );\n\t\t\t\t\tthis.showProgress();\n\n\t\t\t\t\tif( this.elements.Count ) {\n\t\t\t\t\t\tthis.elements.Count.innerText = this.queueUploadedCount + 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( this.queueCount === 1 ) {\n\t\t\t\t\t\tif( this.elements.Progress ) {\n\t\t\t\t\t\t\tthis.elements.Progress.removeAttribute( 'value' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnew Element( this.elements.CountWrapper ).hide();\n\t\t\t\t\t} else if( this.elements.CountWrapper ) {\n\t\t\t\t\t\tnew Element( this.elements.CountWrapper ).show();\n\t\t\t\t\t}\n\n\t\t\t\t\tresFileReader.addEventListener( 'load',\n\t\t\t\t\t\t\te => {\n\t\t\t\t\t\t\t\tthis.request.onreadystatechange = () => {\n\t\t\t\t\t\t\t\t\tswitch( this.request.status ) {\n\t\t\t\t\t\t\t\t\t\tcase 200:\n\t\t\t\t\t\t\t\t\t\t\tif( this.request.readyState === 4 ) {\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.info( 'Uploaded ' + strFileName + ' (' + twistfileupload.prettySize( intFileSize ) + ')' );\n\n\t\t\t\t\t\t\t\t\t\t\t\tthis.queue.shift();\n\t\t\t\t\t\t\t\t\t\t\t\tthis.queueUploadedCount++;\n\t\t\t\t\t\t\t\t\t\t\t\tthis.queueUploadedSize += intFileSize;\n\n\t\t\t\t\t\t\t\t\t\t\t\tlet jsonResponse = JSON.parse( this.request.responseText );\n\n\t\t\t\t\t\t\t\t\t\t\t\tif( this.queue.length ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif( this.multiple ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.uploaded.push( jsonResponse );\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.uploaded = [jsonResponse.form_value];\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.updateUploadedList();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif( window.twist.debug ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twindow.twist.debug.logFileUpload( resFile, jsonResponse );\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.settings.oncompletefile( jsonResponse, resFile );\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.upload();\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.hideProgress();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.info( 'Finished uploading ' + this.queueUploadedCount + ' files (' + twistfileupload.prettySize( this.queueUploadedSize ) + ')', 'info' );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.queueCount = 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.queueSize = 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.queueUploadedCount = 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.queueUploadedSize = 0;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.clearInput();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif( this.multiple ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.uploaded.push( jsonResponse );\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.uploaded = [jsonResponse];\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.updateUploadedList();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif( window.twist.debug ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twindow.twist.debug.logFileUpload( resFile, jsonResponse );\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.settings.oncompletefile( jsonResponse, resFile );\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.settings.oncompletequeue();\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase 403:\n\t\t\t\t\t\t\t\t\t\t\tconsole.error( 'Permission denied', 'error' );\n\n\t\t\t\t\t\t\t\t\t\t\tthis.queue.shift();\n\t\t\t\t\t\t\t\t\t\t\tthis.queueCount--;\n\t\t\t\t\t\t\t\t\t\t\tthis.queueSize--;\n\n\t\t\t\t\t\t\t\t\t\t\tthis.settings.onerror( resFile );\n\n\t\t\t\t\t\t\t\t\t\t\tif( this.queue.length ) {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.upload();\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.hideProgress();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase 404:\n\t\t\t\t\t\t\t\t\t\t\tconsole.error( 'Invalid function call', 'error' );\n\n\t\t\t\t\t\t\t\t\t\t\tthis.queue.shift();\n\t\t\t\t\t\t\t\t\t\t\tthis.queueCount--;\n\t\t\t\t\t\t\t\t\t\t\tthis.queueSize--;\n\n\t\t\t\t\t\t\t\t\t\t\tthis.settings.onerror( resFile );\n\n\t\t\t\t\t\t\t\t\t\t\tif( this.queue.length ) {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.upload();\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.hideProgress();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tthis.request.onprogress = e => {\n\t\t\t\t\t\t\t\t\tif( e.lengthComputable ) {\n\t\t\t\t\t\t\t\t\t\tif( this.elements.Progress ) {\n\t\t\t\t\t\t\t\t\t\t\tlet intPercentage = Math.round( ( e.loaded / e.total ) * 100 );\n\t\t\t\t\t\t\t\t\t\t\tthis.elements.Progress.value = intPercentage;\n\n\t\t\t\t\t\t\t\t\t\t\tconsole.log( twistfileupload.prettySize( e.loaded ) + '/' + twistfileupload.prettySize( e.total ) + ' (' + intPercentage + '%)' );\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tthis.settings.onprogress( resFile, e.loaded, e.total );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tthis.request.upload.onprogress = this.request.onprogress;\n\t\t\t\t\t\t\t\tthis.request.addEventListener( 'load', () => {}, false );\n\t\t\t\t\t\t\t\tthis.request.addEventListener( 'error', () => {\n\t\t\t\t\t\t\t\t\tif( this.queue.length ) {\n\t\t\t\t\t\t\t\t\t\tthis.hideProgress();\n\n\t\t\t\t\t\t\t\t\t\tthis.queue = [];\n\t\t\t\t\t\t\t\t\t\tthis.queueCount = 0;\n\t\t\t\t\t\t\t\t\t\tthis.queueSize = 0;\n\t\t\t\t\t\t\t\t\t\tthis.queueUploadedCount = 0;\n\t\t\t\t\t\t\t\t\t\tthis.queueUploadedSize = 0;\n\n\t\t\t\t\t\t\t\t\t\tthis.settings.onerror( resFile );\n\n\t\t\t\t\t\t\t\t\t\tconsole.error( 'An error occurred', 'error' );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}, false );\n\t\t\t\t\t\t\t\tthis.request.addEventListener( 'abort', () => {\n\t\t\t\t\t\t\t\t\tif( this.queue.length ) {\n\t\t\t\t\t\t\t\t\t\tthis.hideProgress();\n\n\t\t\t\t\t\t\t\t\t\tthis.queue = [];\n\t\t\t\t\t\t\t\t\t\tthis.queueCount = 0;\n\t\t\t\t\t\t\t\t\t\tthis.queueSize = 0;\n\t\t\t\t\t\t\t\t\t\tthis.queueUploadedCount = 0;\n\t\t\t\t\t\t\t\t\t\tthis.queueUploadedSize = 0;\n\n\t\t\t\t\t\t\t\t\t\tthis.settings.onabort( resFile );\n\n\t\t\t\t\t\t\t\t\t\tconsole.error( 'Upload aborted', 'warning' );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}, false );\n\t\t\t\t\t\t\t\tthis.request.open( 'PUT', this.uri, true );\n\t\t\t\t\t\t\t\tthis.request.setRequestHeader( 'Accept', '\"text/plain; charset=iso-8859-1\", \"Content-Type\": \"text/plain; charset=iso-8859-1\"' );\n\t\t\t\t\t\t\t\tthis.request.setRequestHeader( 'Twist-File', strFileName );\n\t\t\t\t\t\t\t\tthis.request.setRequestHeader( 'Twist-Length', intFileSize );\n\t\t\t\t\t\t\t\tthis.request.setRequestHeader( 'Twist-UID', this.id );\n\t\t\t\t\t\t\t\tthis.request.send( resFileReader.result );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\tresFileReader.readAsArrayBuffer( resFile );\n\t\t\t\t} else {\n\t\t\t\t\tlet objInvalidFile = this.queue.shift();\n\t\t\t\t\tthis.elements.Input.value = '';\n\n\t\t\t\t\tthis.settings.oninvalidtype( objInvalidFile, this.acceptTypes, this.acceptExtentions );\n\n\t\t\t\t\tconsole.error( strFileName + ' (' + strFileType + ') is not in the list of allowed types', 'warn' );\n\n\t\t\t\t\tif( this.acceptTypes.length ) {\n\t\t\t\t\t\tconsole.info( 'Allowed MIME types: ' + this.acceptTypes.join( ', ' ) );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( this.acceptExtentions.length ) {\n\t\t\t\t\t\tconsole.info( 'Allowed file extensions: ' + this.acceptExtentions.join( ', ' ) );\n\t\t\t\t\t}\n\n\t\t\t\t\t//TODO: Handle this without using alert()\n\t\t\t\t\t//alert( this.settings.invalidtypemessage );\n\n\t\t\t\t\tthis.clearInput();\n\t\t\t\t}\n\t\t\t}\n\t\t} catch( err ) {\n\t\t\tconsole.log( this );\n\t\t\tthis.hideProgress();\n\n\t\t\tthis.settings.onerror( this.queue[0] );\n\t\t\tthis.settings.onabort( this.queue[0] );\n\n\t\t\tthis.queue = [];\n\t\t\tthis.queueCount = 0;\n\t\t\tthis.queueSize = 0;\n\t\t\tthis.queueUploadedCount = 0;\n\t\t\tthis.queueUploadedSize = 0;\n\n\t\t\tconsole.error( err, 'error' );\n\t\t}\n\t}\n\n\tshowProgress() {\n\t\tnew Element( this.elements.Input ).hide();\n\t\tnew Element( this.elements.ProgressWrapper ).show();\n\n\t\tif( this.elements.CancelUpload ) {\n\t\t\tthis.elements.CancelUpload.addEventListener( 'click', this.cancelUpload );\n\t\t}\n\t}\n\n\thideProgress() {\n\t\tnew Element( this.elements.Input ).show();\n\t\tnew Element( this.elements.ProgressWrapper ).hide();\n\n\t\tif( this.elements.CancelUpload ) {\n\t\t\tthis.elements.CancelUpload.removeEventListener( 'click', this.cancelUpload );\n\t\t}\n\t}\n\n\n\tclearInput() {\n\t\tthis.elements.Input.value = '';\n\n\t\tif( this.elements.Input.value ) {\n\t\t\tthis.elements.Input.type = 'text';\n\t\t\tthis.elements.Input.type = 'file';\n\t\t}\n\n\t\tthis.elements.Pseudo.value = '';\n\t\tthis.settings.onclear();\n\t}\n\n\tcancelUpload() {\n\t\tthis.request.abort();\n\t}\n\n\tupdateUploadedList() {\n\t\tlet arrUploadedFormValues = [];\n\n\t\tthis.elements.List.innerHTML = '';\n\n\t\tconsole.log( this.uploaded );\n\n\t\tfor( let objUploadedFile of this.uploaded ) {\n\t\t\tlet strFilePreview = objUploadedFile.uri_preview,\n\t\t\t\t\tstrFileDetails = '',\n\t\t\t\t\tarrFileDetails = ['file/name', 'file/size', 'file_type'],\n\t\t\t\t\tstrPreview = 'thumb-' + this.settings.previewsize;\n\n\t\t\tarrUploadedFormValues.push( objUploadedFile.form_value );\n\n\t\t\tif( this.settings.previewsquare ) {\n\t\t\t\tstrPreview = 'square-' + strPreview;\n\t\t\t}\n\n\t\t\tif( objUploadedFile.support &&\n\t\t\t\t\tobjUploadedFile.support[strPreview] ) {\n\t\t\t\tstrFilePreview = objUploadedFile.support[strPreview];\n\t\t\t}\n\n\t\t\tfor( let intFileDetail in arrFileDetails ) {\n\t\t\t\tlet strFileDetail = arrFileDetails[intFileDetail],\n\t\t\t\t\t\tstrProperty;\n\n\t\t\t\tif( strFileDetail.indexOf( '/' ) !== -1 ) {\n\t\t\t\t\tlet arrDelve = strFileDetail.split( '/' ),\n\t\t\t\t\t\t\tobjToDelve = objUploadedFile[arrDelve[0]] || null;\n\n\t\t\t\t\tarrDelve.shift();\n\n\t\t\t\t\tif( objToDelve ) {\n\t\t\t\t\t\tfor( let intKeyPart in arrDelve ) {\n\t\t\t\t\t\t\tobjToDelve = objToDelve[arrDelve[intKeyPart]] || null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstrProperty = objToDelve || null;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstrProperty = objUploadedFile[strFileDetail] || null;\n\t\t\t\t}\n\n\t\t\t\tstrFileDetails += '<li data-key=\"' + strFileDetail + '\"><span>' + strFileDetail.replace( /[\\/_]/g, ' ' ) + ' :</span>' + strProperty + '</li>';\n\t\t\t}\n\n\t\t\tlet listItem = Element.create( 'li', 'twistupload-file-list-item' ),\n\t\t\t\t\tlistItemPreview = Element.create( 'img', '', {src: strFilePreview} ),\n\t\t\t\t\tlistItemInfo = Element.create( 'ul', 'twistupload-file-list-item-info', {}, strFileDetails ),\n\t\t\t\t\tlistItemRemoveButton = Element.create( 'button', '', {}, 'Remove' );\n\n\t\t\tlistItemRemoveButton.addEventListener( 'click', (fileToRemove => {\n\t\t\t\treturn () => {\n\t\t\t\t\tthis.uploaded.splice( this.uploaded.indexOf( fileToRemove ), 1 );\n\t\t\t\t\tthis.updateUploadedList();\n\t\t\t\t}\n\t\t\t})( objUploadedFile ) );\n\n\t\t\tlistItem.appendChild( listItemPreview );\n\t\t\tlistItem.appendChild( listItemInfo );\n\t\t\tlistItem.appendChild( listItemRemoveButton );\n\n\t\t\tthis.elements.List.appendChild( listItem );\n\t\t}\n\n\t\tthis.elements.Pseudo.value = arrUploadedFormValues.join( ',' );\n\t}\n\n\ton( event, action, context = null ) {\n\t\t//TODO\n\t}\n\n\toff( event, action ) {\n\t\t//TODO\n\t}\n\n\ttrigger( event ) {\n\t\t//TODO\n\t}\n}\n\n\n// class old {\n// \tconstructor( id, strUri, objSettings ) {\n// \t\tif( this.elements.Pseudo &&\n// \t\t\t\tthis.elements.Pseudo.value &&\n// \t\t\t\tthis.elements.Pseudo.value !== '' ) {\n// \t\t\tthis.uploaded = this.elements.Pseudo.value.split( ',' ) || [];\n// \t\t}\n//\n// \t\tlet strAccept = this.elements.Input ? this.elements.Input.getAttribute( 'accept' ) : '';\n// \t\tif( strAccept ) {\n// \t\t\tlet arrAcceptValues = strAccept.replace( / /g, '' ).split( ',' );\n//\n// \t\t\tif( arrAcceptValues.length ) {\n// \t\t\t\tfor( let intAccept in arrAcceptValues ) {\n// \t\t\t\t\tif( arrAcceptValues[intAccept].substr( 0, 1 ) === '.' ) {\n// \t\t\t\t\t\tthis.acceptExtentions.push( arrAcceptValues[intAccept].substr( 1 ).toLowerCase() );\n// \t\t\t\t\t} else {\n// \t\t\t\t\t\tthis.acceptTypes.push( arrAcceptValues[intAccept].replace( /\\//g, '\\\\/' ).replace( /\\*/g, '.*' ) );\n// \t\t\t\t\t}\n//\n// \t\t\t\t\tthis.acceptRaw.push( arrAcceptValues[intAccept] );\n// \t\t\t\t}\n// \t\t\t}\n// \t\t}\n// \t}\n// }\n"],"names":["Element","el","this","toggle","show","value","getAttribute","display","style","computedDisplay","window","getComputedStyle","currentStyle","defaultDisplay","nodeName","setAttribute","tag","classes","attributes","html","document","createElement","className","join","e","attribute","hasOwnProperty","innerHTML","id","uri","name","multiple","settings","uploadSupported","XMLHttpRequest","responseType","requestTest","open","Object","assign","elements","create","getElementById","events","queue","queueCount","queueSize","queueUploadedCount","queueUploadedSize","request","uploaded","replace","addMarkup","addDragAndDropListeners","Input","addEventListener","files","upload","hideProgress","warn","ProgressWrapper","appendChild","Progress","CancelUpload","CountWrapper","Count","insertAdjacentHTML","CountTotal","Wrapper","Pseudo","List","dropArea","dragdrop","ondrop","preventDefault","target","dataTransfer","classList","remove","_this2","hoverclass","dropableclass","ondragstart","add","ondragover","ondragleave","ondragend","arrFiles","resFiles","srcElement","push","apply","length","intFile","intFiles","parseInt","size","innerText","log","resFile","strFileName","strFileType","type","strFileExtention","substr","lastIndexOf","toLowerCase","intFileSize","resFileReader","FileReader","blob","blAcceptedType","acceptTypes","acceptExtensions","RegExp","test","onstart","showProgress","removeAttribute","hide","onreadystatechange","_this3","status","readyState","info","twistfileupload","prettySize","shift","jsonResponse","JSON","parse","responseText","form_value","updateUploadedList","twist","debug","logFileUpload","oncompletefile","clearInput","oncompletequeue","error","onerror","onprogress","lengthComputable","intPercentage","Math","round","loaded","total","onabort","setRequestHeader","send","result","readAsArrayBuffer","objInvalidFile","oninvalidtype","acceptExtentions","err","cancelUpload","removeEventListener","onclear","abort","arrUploadedFormValues","objUploadedFile","strFilePreview","uri_preview","strFileDetails","arrFileDetails","strPreview","previewsize","intFileDetail","previewsquare","support","strFileDetail","strProperty","indexOf","arrDelve","split","objToDelve","intKeyPart","listItem","listItemPreview","src","listItemInfo","listItemRemoveButton","splice","_this4","fileToRemove","event","action","intBytes","arrLimits","intLimit","pow","intNumber","intDP","parseFloat"],"mappings":"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"}