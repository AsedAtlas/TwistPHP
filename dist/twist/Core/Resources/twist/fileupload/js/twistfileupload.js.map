{"version":3,"file":"twistfileupload.js","sources":["../../../../../../../src/Core/Resources/twist/fileupload/js/twistfileupload.js"],"sourcesContent":["/*!\n * TwistPHP - An open source PHP MVC framework built from the ground up.\n * Copyright (C) 2016  Shadow Technologies Ltd.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @author     Shadow Technologies Ltd. <contact@shadow-technologies.co.uk>\n * @license    https://www.gnu.org/licenses/gpl.html GPL License\n * @link       https://twistphp.com\n */\n\nlet hasClass = ( domElement, strClass ) => {\n\t\t\treturn domElement.className.indexOf( strClass ) !== -1;\n\t\t},\n\t\taddClass = ( domElement, strClass ) => {\n\t\t\tif( !hasClass( domElement, strClass ) ) {\n\t\t\t\tdomElement.className += ' ' + strClass;\n\t\t\t}\n\t\t},\n\t\tremoveClass = ( domElement, strClass ) => {\n\t\t\tif( hasClass( domElement, strClass ) ) {\n\t\t\t\tdomElement.className = domElement.className.replace( new RegExp( '^' + strClass + '$', 'g' ), '' ).replace( new RegExp( '^' + strClass + ' ', 'g' ), '' ).replace( new RegExp( ' ' + strClass + '$', 'g' ), '' ).replace( new RegExp( ' ' + strClass + ' ', 'g' ), ' ' );\n\t\t\t}\n\t\t},\n\t\tprettySize = ( intBytes ) => {\n\t\t\tlet arrLimits = ['B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n\t\t\t\t\tintLimit = 0;\n\n\t\t\twhile( arrLimits[intLimit] &&\n\t\t\tintBytes > Math.pow( 1024, intLimit + 1 ) ) {\n\t\t\t\tintLimit++;\n\t\t\t}\n\n\t\t\treturn round( intBytes / Math.pow( 1024, intLimit ), ( intLimit > 1 ? 2 : 0 ) ) + arrLimits[intLimit];\n\t\t},\n\t\tround = ( intNumber, intDP ) => {\n\t\t\tintDP = ( typeof intDP !== 'number' ) ? 0 : intDP;\n\t\t\treturn intDP === 0 ? parseInt( Math.round( intNumber * Math.pow( 10, intDP ) ) / Math.pow( 10, intDP ) ) : parseFloat( Math.round( intNumber * Math.pow( 10, intDP ) ) / Math.pow( 10, intDP ) );\n\t\t},\n\t\tuploadSupported = ( typeof new XMLHttpRequest().responseType === 'string' && 'withCredentials' in new XMLHttpRequest() );\n\n\n\n\n\n\n\n\nexport default class twistfileupload {\n\tconstructor( id, strUri, objSettings ) {\n\t\tif( uploadSupported ) {\n\t\t\tlet requestTest = new XMLHttpRequest();\n\t\t\trequestTest.open( 'GET', '/' );\n\t\t\ttry {\n\t\t\t\trequestTest.responseType = 'arraybuffer';\n\t\t\t} catch( e ) {\n\t\t\t\tuploadSupported = false;\n\t\t\t}\n\t\t}\n\n\t\tthis.id = id;\n\n\t\tthis.created = ( new Date() ).getTime();\n\t\tthis.debug = false;\n\t\tthis.elements = {\n\t\t\t// The cancel upload button\n\t\t\tCancelUpload: document.getElementById( this.id + '-cancel' ),\n\n\t\t\t// The upload count element\n\t\t\tCount: document.getElementById( this.id + '-count' ),\n\n\t\t\t// The upload count wrapper element\n\t\t\tCountWrapper: document.getElementById( this.id + '-count-wrapper' ),\n\n\t\t\t// The total file count element\n\t\t\tCountTotal: document.getElementById( this.id + '-total' ),\n\n\t\t\t// The file input element\n\t\t\tInput: document.getElementById( this.id ),\n\n\t\t\t// The list of uploaded files element\n\t\t\tList: document.getElementById( this.id + '-list' ),\n\n\t\t\t// The upload progress element\n\t\t\tProgress: document.getElementById( this.id + '-progress' ),\n\n\t\t\t// The upload progress wrapper element\n\t\t\tProgressWrapper: document.getElementById( this.id + '-progress-wrapper' ),\n\n\t\t\t// The pseudo element containing the CSV values that will be posted\n\t\t\tPseudo: document.getElementById( this.id + '-pseudo' ),\n\t\t};\n\n\n\n\n\n\n\t\t/**\n\t\t * An array of allowed file extensions\n\t\t * @type {string[]}\n\t\t */\n\t\tthis.acceptExtentions = [];\n\t\t/**\n\t\t * An array of all the raw allowed types and extensions\n\t\t * @type {string[]}\n\t\t */\n\t\tthis.acceptRaw = [];\n\t\t/**\n\t\t * An array of allowed file types\n\t\t * @type {string[]}\n\t\t */\n\t\tthis.acceptTypes = [];\n\t\t/**\n\t\t * The display property of the upload count element\n\t\t * @type {null}\n\t\t */\n\t\tthis.domCountWrapperDisplay = null;\n\t\t/**\n\t\t * The display property of the file input element\n\t\t * @type {null}\n\t\t */\n\t\tthis.domInputDisplay = null;\n\t\t/**\n\t\t * The display property of the cancel upload button\n\t\t * @type {string|null}\n\t\t */\n\t\tthis.domCancelUploadDisplay = null;\n\n\t\t/**\n\t\t * True if the file input field has a 'multiple' attribute\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.multiple = ( this.element( 'Input' ) && this.element( 'Input' ).hasAttribute( 'multiple' ) ) || false;\n\n\t\t/**\n\t\t * The queue of files still to be uploaded\n\t\t * @type {Array}\n\t\t */\n\t\tthis.queue = [];\n\n\t\t/**\n\t\t * The number of files still in the queue\n\t\t * @type {number}\n\t\t */\n\t\tthis.queueCount = 0;\n\n\t\t/**\n\t\t * The size (in bytes) of the files still in the queue\n\t\t * @type {number}\n\t\t */\n\t\tthis.queueSize = 0;\n\n\t\t/**\n\t\t * The number of files uploaded\n\t\t * @type {number}\n\t\t */\n\t\tthis.queueUploadedCount = 0;\n\n\t\t/**\n\t\t * The size (in bytes) of the files uploaded\n\t\t * @type {number}\n\t\t */\n\t\tthis.queueUploadedSize = 0;\n\n\t\t/**\n\t\t * The XML HTTP request object\n\t\t * @type {XMLHttpRequest}\n\t\t */\n\t\tthis.request = new XMLHttpRequest();\n\n\t\t/**\n\t\t * @deprecated\n\t\t * @type {boolean}\n\t\t */\n\t\tthis.supported = false;\n\n\t\t/**\n\t\t * An array of uploaded files\n\t\t * @type {Object[]}\n\t\t */\n\t\tthis.uploaded = [];\n\n\t\t/**\n\t\t * The URI to upload files to\n\t\t * @type {string}\n\t\t */\n\t\tthis.uri = '/' + strUri.replace( /^\\//, '' ).replace( /\\/$/, '' );\n\n\t\tthis.settings = {\n\t\t\tabortable: true,\n\t\t\tcounter: true,\n\t\t\tdebug: false,\n\t\t\tdragdrop: null,\n\t\t\tdropableclass: 'twistupload-dropable',\n\t\t\thoverclass: 'twistupload-hover',\n\t\t\tinvalidtypemessage: 'This file type is not permitted',\n\t\t\tonabort: () => {},\n\t\t\tonclear: () => {},\n\t\t\toncompletefile: () => {},\n\t\t\toncompletequeue: () => {},\n\t\t\tonerror: () => {},\n\t\t\toninvalidtype: () => {},\n\t\t\tonprogress: () => {},\n\t\t\tonstart: () => {},\n\t\t\tpreviewsize: 128,\n\t\t\tpreviewsquare: true\n\t\t};\n\n\n\n\n\t\tthis.boundCancelUpload = e => { this.cancelUpload(); };\n\n\n\t\tif( this.element( 'Pseudo' ) &&\n\t\t\t\tthis.element( 'Pseudo' ).value &&\n\t\t\t\tthis.element( 'Pseudo' ).value !== '' ) {\n\t\t\tthis.uploaded = this.element( 'Pseudo' ).value.split( ',' ) || [];\n\t\t}\n\n\t\tif( this.element( 'CountWrapper' ) && !this.settings.counter ) {\n\t\t\tthis.element( 'CountWrapper' ).style.display = 'none';\n\t\t}\n\n\t\tif( this.element( 'CancelUpload' ) && !this.settings.abortable ) {\n\t\t\tthis.element( 'CancelUpload' ).style.display = 'none';\n\t\t}\n\n\t\tthis.hideProgress();\n\n\t\tif( this.settings.dragdrop !== null ) {\n\t\t\tlet domDrop = document.getElementById( this.settings.dragdrop );\n\n\t\t\tif( domDrop ) {\n\t\t\t\tdomDrop.ondrop = e => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tthis.upload( e, e.target.files || e.dataTransfer.files );\n\n\t\t\t\t\tremoveClass( domDrop, this.settings.hoverclass );\n\t\t\t\t\tremoveClass( domDrop, this.settings.dropableclass );\n\t\t\t\t};\n\t\t\t\tdomDrop.ondragstart = () => {\n\t\t\t\t\taddClass( domDrop, this.settings.dropableclass );\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\t\t\t\tdomDrop.ondragover = () => {\n\t\t\t\t\taddClass( domDrop, this.settings.hoverclass );\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\t\t\t\tdomDrop.ondragleave = () => {\n\t\t\t\t\tremoveClass( domDrop, this.settings.hoverclass );\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\t\t\t\tdomDrop.ondragend = () => {\n\t\t\t\t\tremoveClass( domDrop, this.settings.hoverclass );\n\t\t\t\t\tremoveClass( domDrop, this.settings.dropableclass );\n\t\t\t\t\treturn false;\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tlet strAccept = this.element( 'Input' ) ? this.element( 'Input' ).getAttribute( 'accept' ) : '';\n\t\tif( strAccept ) {\n\t\t\tlet arrAcceptValues = strAccept.replace( / /g, '' ).split( ',' );\n\n\t\t\tif( arrAcceptValues.length ) {\n\t\t\t\tfor( let intAccept in arrAcceptValues ) {\n\t\t\t\t\tif( arrAcceptValues[intAccept].substr( 0, 1 ) === '.' ) {\n\t\t\t\t\t\tthis.acceptExtentions.push( arrAcceptValues[intAccept].substr( 1 ).toLowerCase() );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.acceptTypes.push( arrAcceptValues[intAccept].replace( /\\//g, '\\\\/' ).replace( /\\*/g, '.*' ) );\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.acceptRaw.push( arrAcceptValues[intAccept] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( uploadSupported ) {\n\t\t\tif( this.element( 'Input' ) ) {\n\t\t\t\tif( this.element( 'Pseudo' ) ) {\n\t\t\t\t\tthis.element( 'Pseudo' ).name = this.element( 'Input' ).name.replace( '[]', '' );\n\t\t\t\t\tthis.element( 'Input' ).removeAttribute( 'name' );\n\t\t\t\t}\n\n\t\t\t\tthis.element( 'Input' ).addEventListener( 'change', (e, files) => {this.upload( e, files );} );\n\t\t\t} else {\n\t\t\t\tthrow 'No element exists with id=\"' + this.id + '\"';\n\t\t\t}\n\t\t} else {\n\t\t\tthis.hideProgress();\n\n\t\t\tconsole.warn( 'Your browser does not support AJAX uploading', 'warn', true );\n\t\t}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t}\n\n\telement( element ) {\n\t\treturn this.elements[element] || null;\n\t}\n\n\n\n\t// Do the upload with the selected files\n\tupload( e, arrFiles ) {\n\t\ttry {\n\t\t\tif( e ) {\n\t\t\t\tlet resFiles = ( !arrFiles ? ( e.target || e.srcElement ).files : arrFiles );\n\n\t\t\t\tthis.queue.push.apply( this.queue, resFiles );\n\t\t\t\tthis.queueCount += resFiles.length;\n\n\t\t\t\tfor( let intFile = 0, intFiles = resFiles.length; intFile < intFiles; intFile++ ) {\n\t\t\t\t\tthis.queueSize += parseInt( resFiles[intFile].size );\n\t\t\t\t}\n\n\t\t\t\tif( this.element( 'CountTotal' ) ) {\n\t\t\t\t\tthis.element( 'CountTotal' ).innerText = this.queueCount;\n\t\t\t\t}\n\n\t\t\t\tconsole.log( 'Added ' + resFiles.length + ' files to the queue', 'info' );\n\t\t\t}\n\n\t\t\tif( this.domCancelUploadDisplay === null ) {\n\t\t\t\tthis.domCancelUploadDisplay = this.element( 'CancelUpload' ).style.display || 'inline-block';\n\t\t\t}\n\n\t\t\tif( this.domCountWrapperDisplay === null ) {\n\t\t\t\tthis.domCountWrapperDisplay = this.element( 'CountWrapper' ).style.display || 'inline-block';\n\t\t\t}\n\n\t\t\tif( this.domInputDisplay === null ) {\n\t\t\t\tthis.domInputDisplay = this.element( 'Input' ).style.display || 'inline-block';\n\t\t\t}\n\n\t\t\tif( this.queue.length ) {\n\t\t\t\tlet resFile = this.queue[0],\n\t\t\t\t\t\tstrFileName = resFile.name,\n\t\t\t\t\t\tstrFileType = resFile.type,\n\t\t\t\t\t\tstrFileExtention = strFileName.substr( strFileName.lastIndexOf( '.' ) + 1 ).toLowerCase(),\n\t\t\t\t\t\tintFileSize = parseInt( resFile.size ),\n\t\t\t\t\t\tresFileReader = new FileReader( {blob: true} ),\n\t\t\t\t\t\tblAcceptedType = !this.acceptTypes.length && !this.acceptExtentions.length;\n\n\t\t\t\tif( !blAcceptedType ) {\n\t\t\t\t\tfor( let intType in this.acceptTypes ) {\n\t\t\t\t\t\tif( new RegExp( '^' + this.acceptTypes[intType] + '$', 'gi' ).test( strFileType ) ) {\n\t\t\t\t\t\t\tblAcceptedType = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif( !blAcceptedType ) {\n\t\t\t\t\tfor( let intExtention in this.acceptExtentions ) {\n\t\t\t\t\t\tif( strFileExtention === this.acceptExtentions[intExtention] ) {\n\t\t\t\t\t\t\tblAcceptedType = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif( blAcceptedType ) {\n\t\t\t\t\tthis.settings.onstart( resFile );\n\t\t\t\t\tthis.showProgress();\n\n\t\t\t\t\tif( this.element( 'Count' ) ) {\n\t\t\t\t\t\tthis.element( 'Count' ).innerText = this.queueUploadedCount + 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( this.queueCount === 1 ) {\n\t\t\t\t\t\tif( this.element( 'Progress' ) ) {\n\t\t\t\t\t\t\tthis.element( 'Progress' ).removeAttribute( 'value' );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( this.element( 'CountWrapper' ) ) {\n\t\t\t\t\t\t\tthis.element( 'CountWrapper' ).style.display = 'none';\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if( this.element( 'CountWrapper' ) ) {\n\t\t\t\t\t\tthis.element( 'CountWrapper' ).style.display = this.element( 'CountWrapperDisplay' );\n\t\t\t\t\t}\n\n\t\t\t\t\tresFileReader.addEventListener( 'load',\n\t\t\t\t\t\t\te => {\n\t\t\t\t\t\t\t\tthis.request.onreadystatechange = () => {\n\t\t\t\t\t\t\t\t\tswitch( this.request.status ) {\n\t\t\t\t\t\t\t\t\t\tcase 200:\n\t\t\t\t\t\t\t\t\t\t\tif( this.request.readyState === 4 ) {\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.info( 'Uploaded ' + strFileName + ' (' + prettySize( intFileSize ) + ')' );\n\n\t\t\t\t\t\t\t\t\t\t\t\tthis.queue.shift();\n\t\t\t\t\t\t\t\t\t\t\t\tthis.queueUploadedCount++;\n\t\t\t\t\t\t\t\t\t\t\t\tthis.queueUploadedSize += intFileSize;\n\n\t\t\t\t\t\t\t\t\t\t\t\tlet jsonResponse = JSON.parse( this.request.responseText );\n\n\t\t\t\t\t\t\t\t\t\t\t\tif( this.queue.length ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif( this.multiple ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.uploaded.push( jsonResponse );\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.uploaded = [jsonResponse.form_value];\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.updateUploadedList();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif( window.twist.debug ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twindow.twist.debug.logFileUpload( resFile,jsonResponse );\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.settings.oncompletefile( jsonResponse, resFile );\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.upload();\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.hideProgress();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.info( 'Finished uploading ' + this.queueUploadedCount + ' files (' + prettySize( this.queueUploadedSize ) + ')', 'info' );\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.queueCount = 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.queueSize = 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.queueUploadedCount = 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.queueUploadedSize = 0;\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.clearInput();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif( this.multiple ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.uploaded.push( jsonResponse );\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.uploaded = [jsonResponse];\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.updateUploadedList();\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tif( window.twist.debug ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twindow.twist.debug.logFileUpload( resFile,jsonResponse );\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.settings.oncompletefile( jsonResponse, resFile );\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.settings.oncompletequeue();\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase 403:\n\t\t\t\t\t\t\t\t\t\t\tconsole.error( 'Permission denied', 'error' );\n\n\t\t\t\t\t\t\t\t\t\t\tthis.queue.shift();\n\t\t\t\t\t\t\t\t\t\t\tthis.queueCount--;\n\t\t\t\t\t\t\t\t\t\t\tthis.queueSize--;\n\n\t\t\t\t\t\t\t\t\t\t\tthis.settings.onerror( resFile );\n\n\t\t\t\t\t\t\t\t\t\t\tif( this.queue.length ) {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.upload();\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.hideProgress();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\t\t\tcase 404:\n\t\t\t\t\t\t\t\t\t\t\tconsole.error( 'Invalid function call', 'error' );\n\n\t\t\t\t\t\t\t\t\t\t\tthis.queue.shift();\n\t\t\t\t\t\t\t\t\t\t\tthis.queueCount--;\n\t\t\t\t\t\t\t\t\t\t\tthis.queueSize--;\n\n\t\t\t\t\t\t\t\t\t\t\tthis.settings.onerror( resFile );\n\n\t\t\t\t\t\t\t\t\t\t\tif( this.queue.length ) {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.upload();\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.hideProgress();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tthis.request.onprogress = e => {\n\t\t\t\t\t\t\t\t\tif( e.lengthComputable ) {\n\t\t\t\t\t\t\t\t\t\tif( this.element( 'Progress' ) ) {\n\t\t\t\t\t\t\t\t\t\t\tlet intPercentage = Math.round( ( e.loaded / e.total ) * 100 );\n\t\t\t\t\t\t\t\t\t\t\tthis.element( 'Progress' ).value = intPercentage;\n\n\t\t\t\t\t\t\t\t\t\t\tconsole.log( prettySize( e.loaded ) + '/' + prettySize( e.total ) + ' (' + intPercentage + '%)' );\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tthis.settings.onprogress( resFile, e.loaded, e.total );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tthis.request.upload.onprogress = this.request.onprogress;\n\t\t\t\t\t\t\t\tthis.request.addEventListener( 'load', () => {}, false );\n\t\t\t\t\t\t\t\tthis.request.addEventListener( 'error', () => {\n\t\t\t\t\t\t\t\t\t\t\tif( this.queue.length ) {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.hideProgress();\n\n\t\t\t\t\t\t\t\t\t\t\t\tthis.queue = [];\n\t\t\t\t\t\t\t\t\t\t\t\tthis.queueCount = 0;\n\t\t\t\t\t\t\t\t\t\t\t\tthis.queueSize = 0;\n\t\t\t\t\t\t\t\t\t\t\t\tthis.queueUploadedCount = 0;\n\t\t\t\t\t\t\t\t\t\t\t\tthis.queueUploadedSize = 0;\n\n\t\t\t\t\t\t\t\t\t\t\t\tthis.settings.onerror( resFile );\n\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.error( 'An error occurred', 'error' );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}, false );\n\t\t\t\t\t\t\t\tthis.request.addEventListener( 'abort', () => {\n\t\t\t\t\t\t\t\t\t\t\tif( this.queue.length ) {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.hideProgress();\n\n\t\t\t\t\t\t\t\t\t\t\t\tthis.queue = [];\n\t\t\t\t\t\t\t\t\t\t\t\tthis.queueCount = 0;\n\t\t\t\t\t\t\t\t\t\t\t\tthis.queueSize = 0;\n\t\t\t\t\t\t\t\t\t\t\t\tthis.queueUploadedCount = 0;\n\t\t\t\t\t\t\t\t\t\t\t\tthis.queueUploadedSize = 0;\n\n\t\t\t\t\t\t\t\t\t\t\t\tthis.settings.onabort( resFile );\n\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.error( 'Upload aborted', 'warning' );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}, false );\n\t\t\t\t\t\t\t\tthis.request.open( 'PUT', this.uri, true );\n\t\t\t\t\t\t\t\tthis.request.setRequestHeader( 'Accept', '\"text/plain; charset=iso-8859-1\", \"Content-Type\": \"text/plain; charset=iso-8859-1\"' );\n\t\t\t\t\t\t\t\tthis.request.setRequestHeader( 'Twist-File', strFileName );\n\t\t\t\t\t\t\t\tthis.request.setRequestHeader( 'Twist-Length', intFileSize );\n\t\t\t\t\t\t\t\tthis.request.setRequestHeader( 'Twist-UID', this.id );\n\t\t\t\t\t\t\t\tthis.request.send( resFileReader.result );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\tresFileReader.readAsArrayBuffer( resFile );\n\t\t\t\t} else {\n\t\t\t\t\tlet objInvalidFile = this.queue.shift();\n\t\t\t\t\tthis.element( 'Input' ).value = '';\n\n\t\t\t\t\tthis.settings.oninvalidtype( objInvalidFile, this.acceptTypes, this.acceptExtentions );\n\n\t\t\t\t\tconsole.error( strFileName + ' (' + strFileType + ') is not in the list of allowed types', 'warn' );\n\n\t\t\t\t\tif( this.acceptTypes.length ) {\n\t\t\t\t\t\tconsole.info( 'Allowed MIME types: ' + this.acceptTypes.join( ', ' ) );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( this.acceptExtentions.length ) {\n\t\t\t\t\t\tconsole.info( 'Allowed file extensions: ' + this.acceptExtentions.join( ', ' ) );\n\t\t\t\t\t}\n\n\t\t\t\t\t//TODO: Handle this without using alert()\n\t\t\t\t\t//alert( this.settings.invalidtypemessage );\n\n\t\t\t\t\tthis.clearInput();\n\t\t\t\t}\n\t\t\t}\n\t\t} catch( err ) {\n\t\t\tconsole.log( this );\n\t\t\tthis.hideProgress();\n\n\t\t\tthis.settings.onerror( this.queue[0] );\n\t\t\tthis.settings.onabort( this.queue[0] );\n\n\t\t\tthis.queue = [];\n\t\t\tthis.queueCount = 0;\n\t\t\tthis.queueSize = 0;\n\t\t\tthis.queueUploadedCount = 0;\n\t\t\tthis.queueUploadedSize = 0;\n\n\t\t\tconsole.error( err, 'error' );\n\t\t}\n\t}\n\n\t//Add a listener to the remove file button\n\taddRemoveFileListener() {\n\t\tlet funRemoveFile = ( intUploadedFileIndex ) => {\n\t\t\treturn () => {\n\t\t\t\tconsole.log( 'Remove' );\n\t\t\t\tthis.removeFileFromListFunction( intUploadedFileIndex );\n\t\t\t};\n\t\t};\n\n\t\tfor( let intUploadedFile in this.uploaded ) {\n\t\t\tlet domRemoveButton = document.getElementById( this.id + '-remove-' + intUploadedFile );\n\n\t\t\tdomRemoveButton.removeEventListener( 'click', ( funRemoveFile )( intUploadedFile ) );\n\t\t\tdomRemoveButton.addEventListener( 'click', ( funRemoveFile )( intUploadedFile ) );\n\t\t}\n\t}\n\n\t// Hide the upload progress bar\n\thideProgress() {\n\t\tif( this.element( 'Input' ) ) {\n\t\t\tthis.element( 'Input' ).style.display = this.element( 'InputDisplay' );\n\t\t}\n\n\t\tif( this.element( 'ProgressWrapper' ) ) {\n\t\t\tthis.element( 'ProgressWrapper' ).style.display = 'none';\n\t\t}\n\n\t\tif( this.element( 'CancelUpload' ) ) {\n\t\t\tthis.element( 'CancelUpload' ).removeEventListener( 'click', this.boundCancelUpload );\n\t\t}\n\t}\n\n\t// Cancel the current upload\n\tcancelUpload() {\n\t\tthis.request.abort();\n\t}\n\n\t// Clear the file input\n\tclearInput() {\n\t\tthis.element( 'Input' ).value = '';\n\n\t\tif( this.element( 'Input' ).value ) {\n\t\t\tthis.element( 'Input' ).type = 'text';\n\t\t\tthis.element( 'Input' ).type = 'file';\n\t\t}\n\n\t\tthis.element( 'Pseudo' ).value = '';\n\t\tthis.settings.onclear();\n\t}\n\n\t// Remove an uploaded file from the list\n\tremoveFileFromListFunction( intFileIndex ) {\n\t\tthis.uploaded.splice( intFileIndex, 1 );\n\t\tthis.updateUploadedList();\n\t}\n\n\t// Show the progress upload bar\n\tshowProgress() {\n\t\tthis.element( 'Input' ).style.display = 'none';\n\n\t\tif( this.element( 'ProgressWrapper' ) ) {\n\t\t\tthis.element( 'ProgressWrapper' ).style.display = this.element( 'InputDisplay' );\n\t\t}\n\n\t\tif( this.element( 'CancelUpload' ) ) {\n\t\t\tthis.element( 'CancelUpload' ).addEventListener( 'click', this.boundCancelUpload );\n\t\t}\n\t}\n\n\t// Update the list of uploaded files\n\tupdateUploadedList() {\n\t\tlet strListHTML = '',\n\t\t\t\tarrUploadedFormValues = [];\n\n\t\tfor( let intUploadedFile in this.uploaded ) {\n\t\t\tlet objUploadedFile = this.uploaded[intUploadedFile],\n\t\t\t\t\tstrFilePreview = objUploadedFile.uri_preview,\n\t\t\t\t\tstrFileDetails = '',\n\t\t\t\t\tarrFileDetails = ['file/name', 'file/size', 'file_type'];\n\n\t\t\tarrUploadedFormValues.push( objUploadedFile.form_value );\n\n\t\t\tlet strPreview = 'thumb-' + this.settings.previewsize;\n\n\t\t\tif( this.settings.previewsquare ) {\n\t\t\t\tstrPreview = 'square-' + strPreview;\n\t\t\t}\n\n\t\t\tif( objUploadedFile.support &&\n\t\t\t\t\tobjUploadedFile.support[strPreview] ) {\n\t\t\t\tstrFilePreview = objUploadedFile.support[strPreview];\n\t\t\t}\n\n\t\t\tfor( let intFileDetail in arrFileDetails ) {\n\t\t\t\tlet strFileDetail = arrFileDetails[intFileDetail],\n\t\t\t\t\t\tstrProperty;\n\n\t\t\t\tif( strFileDetail.indexOf( '/' ) !== -1 ) {\n\t\t\t\t\tlet arrDelve = strFileDetail.split( '/' ),\n\t\t\t\t\t\t\tobjToDelve = objUploadedFile[arrDelve[0]] || null;\n\n\t\t\t\t\tarrDelve.shift();\n\n\t\t\t\t\tif( objToDelve ) {\n\t\t\t\t\t\tfor( let intKeyPart in arrDelve ) {\n\t\t\t\t\t\t\tobjToDelve = objToDelve[arrDelve[intKeyPart]] || null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstrProperty = objToDelve || null;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstrProperty = objUploadedFile[strFileDetail] || null;\n\t\t\t\t}\n\n\t\t\t\tstrFileDetails += '<li data-key=\"' + strFileDetail + '\"><span>' + strFileDetail.replace( /[\\/_]/g, ' ' ) + ' :</span>' + strProperty + '</li>';\n\t\t\t}\n\n\t\t\tstrListHTML += '<li class=\"twistupload-file-list-item\"><img src=\"' + strFilePreview + '\"><ul class=\"twistupload-file-info\">' + strFileDetails + '</ul><button id=\"' + this.id + '-remove-' + intUploadedFile + '\" data-file=\"' + intUploadedFile + '\">Remove</button></li>';\n\t\t}\n\n\t\tthis.element( 'Pseudo' ).value = arrUploadedFormValues.join( ',' );\n\t\tthis.element( 'List' ).innerHTML = strListHTML;\n\n\t\tthis.addRemoveFileListener();\n\t}\n}\n"],"names":["hasClass","domElement","strClass","className","indexOf","addClass","removeClass","replace","RegExp","prettySize","intBytes","arrLimits","intLimit","Math","pow","round","intNumber","intDP","parseInt","parseFloat","uploadSupported","XMLHttpRequest","responseType","id","strUri","objSettings","requestTest","open","e","created","Date","getTime","debug","elements","document","getElementById","this","acceptExtentions","acceptRaw","acceptTypes","domCountWrapperDisplay","domInputDisplay","domCancelUploadDisplay","multiple","element","hasAttribute","queue","queueCount","queueSize","queueUploadedCount","queueUploadedSize","request","supported","uploaded","uri","settings","boundCancelUpload","cancelUpload","value","split","counter","style","display","abortable","hideProgress","dragdrop","domDrop","ondrop","preventDefault","upload","target","files","dataTransfer","_this","hoverclass","dropableclass","ondragstart","ondragover","ondragleave","ondragend","strAccept","getAttribute","arrAcceptValues","length","intAccept","substr","push","toLowerCase","name","removeAttribute","addEventListener","warn","arrFiles","resFiles","srcElement","apply","intFile","intFiles","size","innerText","log","resFile","strFileName","strFileType","type","strFileExtention","lastIndexOf","intFileSize","resFileReader","FileReader","blob","blAcceptedType","intType","test","intExtention","onstart","showProgress","onreadystatechange","_this2","status","readyState","info","shift","jsonResponse","JSON","parse","responseText","form_value","updateUploadedList","window","twist","logFileUpload","oncompletefile","clearInput","oncompletequeue","error","onerror","onprogress","lengthComputable","intPercentage","loaded","total","onabort","setRequestHeader","send","result","readAsArrayBuffer","objInvalidFile","oninvalidtype","join","err","funRemoveFile","intUploadedFileIndex","removeFileFromListFunction","intUploadedFile","domRemoveButton","removeEventListener","abort","onclear","intFileIndex","splice","strListHTML","arrUploadedFormValues","objUploadedFile","strFilePreview","uri_preview","strFileDetails","arrFileDetails","strPreview","previewsize","previewsquare","support","intFileDetail","strFileDetail","strProperty","arrDelve","objToDelve","intKeyPart","innerHTML","addRemoveFileListener"],"mappings":"khBAsBIA,EAAW,SAAEC,EAAYC,UAC2B,IAA9CD,EAAWE,UAAUC,QAASF,IAEtCG,EAAW,SAAEJ,EAAYC,GACnBF,EAAUC,EAAYC,OACfC,WAAa,IAAMD,IAGhCI,EAAc,SAAEL,EAAYC,GACvBF,EAAUC,EAAYC,OACdC,UAAYF,EAAWE,UAAUI,QAAS,IAAIC,OAAQ,IAAMN,EAAW,IAAK,KAAO,IAAKK,QAAS,IAAIC,OAAQ,IAAMN,EAAW,IAAK,KAAO,IAAKK,QAAS,IAAIC,OAAQ,IAAMN,EAAW,IAAK,KAAO,IAAKK,QAAS,IAAIC,OAAQ,IAAMN,EAAW,IAAK,KAAO,OAGrQO,EAAa,SAAEC,WACVC,GAAa,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC9DC,EAAW,EAEND,EAAUC,IACjBF,EAAWG,KAAKC,IAAK,KAAMF,EAAW,eAI/BG,EAAOL,EAAWG,KAAKC,IAAK,KAAMF,GAAcA,EAAW,EAAI,EAAI,GAAQD,EAAUC,IAE7FG,EAAQ,SAAEC,EAAWC,YACO,iBAAVA,EAAuB,EAAIA,EAC3B,IAAVA,EAAcC,SAAUL,KAAKE,MAAOC,EAAYH,KAAKC,IAAK,GAAIG,IAAYJ,KAAKC,IAAK,GAAIG,IAAYE,WAAYN,KAAKE,MAAOC,EAAYH,KAAKC,IAAK,GAAIG,IAAYJ,KAAKC,IAAK,GAAIG,KAExLG,EAAiE,iBAAtC,IAAIC,gBAAiBC,cAA6B,oBAAqB,IAAID,4CAU1FE,EAAIC,EAAQC,2BACpBL,EAAkB,KACjBM,EAAc,IAAIL,iBACVM,KAAM,MAAO,WAEZL,aAAe,cAC1B,MAAOM,MACU,WAIfL,GAAKA,OAELM,SAAY,IAAIC,MAASC,eACzBC,OAAQ,OACRC,uBAEUC,SAASC,eAAgBC,KAAKb,GAAK,iBAG1CW,SAASC,eAAgBC,KAAKb,GAAK,uBAG5BW,SAASC,eAAgBC,KAAKb,GAAK,6BAGrCW,SAASC,eAAgBC,KAAKb,GAAK,gBAGxCW,SAASC,eAAgBC,KAAKb,SAG/BW,SAASC,eAAgBC,KAAKb,GAAK,kBAG/BW,SAASC,eAAgBC,KAAKb,GAAK,6BAG5BW,SAASC,eAAgBC,KAAKb,GAAK,4BAG5CW,SAASC,eAAgBC,KAAKb,GAAK,iBAYvCc,yBAKAC,kBAKAC,oBAKAC,uBAAyB,UAKzBC,gBAAkB,UAKlBC,uBAAyB,UAMzBC,SAAaP,KAAKQ,QAAS,UAAaR,KAAKQ,QAAS,SAAUC,aAAc,cAAkB,OAMhGC,cAMAC,WAAa,OAMbC,UAAY,OAMZC,mBAAqB,OAMrBC,kBAAoB,OAMpBC,QAAU,IAAI9B,oBAMd+B,WAAY,OAMZC,iBAMAC,IAAM,IAAM9B,EAAOjB,QAAS,MAAO,IAAKA,QAAS,MAAO,SAExDgD,qBACO,WACF,SACF,WACG,mBACK,kCACH,uCACQ,0CACX,qBACA,4BACO,6BACC,qBACR,2BACM,wBACH,qBACH,yBACI,mBACE,QAMXC,kBAAoB,cAAYC,gBAGjCrB,KAAKQ,QAAS,WAChBR,KAAKQ,QAAS,UAAWc,OACU,KAAnCtB,KAAKQ,QAAS,UAAWc,aACrBL,SAAWjB,KAAKQ,QAAS,UAAWc,MAAMC,MAAO,UAGnDvB,KAAKQ,QAAS,kBAAqBR,KAAKmB,SAASK,eAC/ChB,QAAS,gBAAiBiB,MAAMC,QAAU,QAG5C1B,KAAKQ,QAAS,kBAAqBR,KAAKmB,SAASQ,iBAC/CnB,QAAS,gBAAiBiB,MAAMC,QAAU,aAG3CE,eAE0B,OAA3B5B,KAAKmB,SAASU,SAAoB,KACjCC,EAAUhC,SAASC,eAAgBC,KAAKmB,SAASU,UAEjDC,MACKC,OAAS,cACdC,mBACGC,OAAQzC,EAAGA,EAAE0C,OAAOC,OAAS3C,EAAE4C,aAAaD,SAEpCL,EAASO,EAAKlB,SAASmB,cACvBR,EAASO,EAAKlB,SAASoB,kBAE7BC,YAAc,oBACXV,EAASO,EAAKlB,SAASoB,gBAC1B,KAEAE,WAAa,oBACVX,EAASO,EAAKlB,SAASmB,aAC1B,KAEAI,YAAc,oBACRZ,EAASO,EAAKlB,SAASmB,aAC7B,KAEAK,UAAY,oBACNb,EAASO,EAAKlB,SAASmB,cACvBR,EAASO,EAAKlB,SAASoB,gBAC7B,QAKNK,EAAY5C,KAAKQ,QAAS,SAAYR,KAAKQ,QAAS,SAAUqC,aAAc,UAAa,MACzFD,EAAY,KACXE,EAAkBF,EAAUzE,QAAS,KAAM,IAAKoD,MAAO,QAEvDuB,EAAgBC,WACd,IAAIC,KAAaF,EAC6B,MAA9CA,EAAgBE,GAAWC,OAAQ,EAAG,QACpChD,iBAAiBiD,KAAMJ,EAAgBE,GAAWC,OAAQ,GAAIE,oBAE9DhD,YAAY+C,KAAMJ,EAAgBE,GAAW7E,QAAS,MAAO,OAAQA,QAAS,MAAO,YAGtF+B,UAAUgD,KAAMJ,EAAgBE,OAKpChE,EAAkB,KACjBgB,KAAKQ,QAAS,cAQX,8BAAgCR,KAAKb,GAAK,IAP5Ca,KAAKQ,QAAS,iBACZA,QAAS,UAAW4C,KAAOpD,KAAKQ,QAAS,SAAU4C,KAAKjF,QAAS,KAAM,SACvEqC,QAAS,SAAU6C,gBAAiB,cAGrC7C,QAAS,SAAU8C,iBAAkB,SAAU,SAAC9D,EAAG2C,KAAgBF,OAAQzC,EAAG2C,eAK/EP,uBAEG2B,KAAM,+CAAgD,QAAQ,6CAiB/D/C,UACDR,KAAKH,SAASW,IAAY,oCAM1BhB,EAAGgE,qBAELhE,EAAI,KACHiE,EAAcD,IAAahE,EAAE0C,QAAU1C,EAAEkE,YAAavB,WAErDzB,MAAMwC,KAAKS,MAAO3D,KAAKU,MAAO+C,QAC9B9C,YAAc8C,EAASV,WAEvB,IAAIa,EAAU,EAAGC,EAAWJ,EAASV,OAAQa,EAAUC,EAAUD,SAChEhD,WAAa9B,SAAU2E,EAASG,GAASE,MAG3C9D,KAAKQ,QAAS,qBACZA,QAAS,cAAeuD,UAAY/D,KAAKW,oBAGvCqD,IAAK,SAAWP,EAASV,OAAS,sBAAuB,WAG9B,OAAhC/C,KAAKM,8BACHA,uBAAyBN,KAAKQ,QAAS,gBAAiBiB,MAAMC,SAAW,gBAG3C,OAAhC1B,KAAKI,8BACHA,uBAAyBJ,KAAKQ,QAAS,gBAAiBiB,MAAMC,SAAW,gBAGlD,OAAzB1B,KAAKK,uBACHA,gBAAkBL,KAAKQ,QAAS,SAAUiB,MAAMC,SAAW,gBAG7D1B,KAAKU,MAAMqC,OAAS,KACnBkB,EAAUjE,KAAKU,MAAM,GACvBwD,EAAcD,EAAQb,KACtBe,EAAcF,EAAQG,KACtBC,EAAmBH,EAAYjB,OAAQiB,EAAYI,YAAa,KAAQ,GAAInB,cAC5EoB,EAAczF,SAAUmF,EAAQH,MAChCU,EAAgB,IAAIC,YAAaC,MAAM,IACvCC,GAAkB3E,KAAKG,YAAY4C,SAAW/C,KAAKC,iBAAiB8C,WAEjE4B,MACC,IAAIC,KAAW5E,KAAKG,eACpB,IAAI/B,OAAQ,IAAM4B,KAAKG,YAAYyE,GAAW,IAAK,MAAOC,KAAMV,GAAgB,IAClE,YAMfQ,MACC,IAAIG,KAAgB9E,KAAKC,oBACzBoE,IAAqBrE,KAAKC,iBAAiB6E,GAAgB,IAC7C,WAMhBH,OACExD,SAAS4D,QAASd,QAClBe,eAEDhF,KAAKQ,QAAS,gBACZA,QAAS,SAAUuD,UAAY/D,KAAKa,mBAAqB,GAGvC,IAApBb,KAAKW,YACJX,KAAKQ,QAAS,kBACZA,QAAS,YAAa6C,gBAAiB,SAGzCrD,KAAKQ,QAAS,uBACZA,QAAS,gBAAiBiB,MAAMC,QAAU,SAEtC1B,KAAKQ,QAAS,uBACnBA,QAAS,gBAAiBiB,MAAMC,QAAU1B,KAAKQ,QAAS,0BAGhD8C,iBAAkB,OAC9B,cACMvC,QAAQkE,mBAAqB,kBACzBC,EAAKnE,QAAQoE,aACf,OAC4B,IAA5BD,EAAKnE,QAAQqE,WAAmB,SAC3BC,KAAM,YAAcnB,EAAc,KAAO7F,EAAYkG,GAAgB,OAExE7D,MAAM4E,UACNzE,uBACAC,mBAAqByD,MAEtBgB,EAAeC,KAAKC,MAAOP,EAAKnE,QAAQ2E,cAExCR,EAAKxE,MAAMqC,QACVmC,EAAK3E,WACHU,SAASiC,KAAMqC,KAEftE,UAAYsE,EAAaI,cAG1BC,qBAEDC,OAAOC,MAAMlG,cACTkG,MAAMlG,MAAMmG,cAAe9B,EAAQsB,KAGtCpE,SAAS6E,eAAgBT,EAActB,KACvChC,aAEAL,uBAEGyD,KAAM,sBAAwBH,EAAKrE,mBAAqB,WAAaxC,EAAY6G,EAAKpE,mBAAsB,IAAK,UAEpHH,WAAa,IACbC,UAAY,IACZC,mBAAqB,IACrBC,kBAAoB,IAEpBmF,aAEDf,EAAK3E,WACHU,SAASiC,KAAMqC,KAEftE,UAAYsE,KAGbK,qBAEDC,OAAOC,MAAMlG,cACTkG,MAAMlG,MAAMmG,cAAe9B,EAAQsB,KAGtCpE,SAAS6E,eAAgBT,EAActB,KACvC9C,SAAS+E,8BAKZ,YACIC,MAAO,oBAAqB,WAE/BzF,MAAM4E,UACN3E,eACAC,cAEAO,SAASiF,QAASnC,GAEnBiB,EAAKxE,MAAMqC,SACTd,WAEAL,0BAIF,YACIuE,MAAO,wBAAyB,WAEnCzF,MAAM4E,UACN3E,eACAC,cAEAO,SAASiF,QAASnC,GAEnBiB,EAAKxE,MAAMqC,SACTd,WAEAL,mBAKJb,QAAQsF,WAAa,eACrB7G,EAAE8G,iBAAmB,IACpBpB,EAAK1E,QAAS,YAAe,KAC5B+F,EAAgB9H,KAAKE,MAASa,EAAEgH,OAAShH,EAAEiH,MAAU,OACpDjG,QAAS,YAAac,MAAQiF,UAE3BvC,IAAK3F,EAAYmB,EAAEgH,QAAW,IAAMnI,EAAYmB,EAAEiH,OAAU,KAAOF,EAAgB,QAGvFpF,SAASkF,WAAYpC,EAASzE,EAAEgH,OAAQhH,EAAEiH,WAG5C1F,QAAQkB,OAAOoE,WAAanB,EAAKnE,QAAQsF,aACzCtF,QAAQuC,iBAAkB,OAAQ,cAAU,KAC5CvC,QAAQuC,iBAAkB,QAAS,WACjC4B,EAAKxE,MAAMqC,WACTnB,iBAEAlB,WACAC,WAAa,IACbC,UAAY,IACZC,mBAAqB,IACrBC,kBAAoB,IAEpBK,SAASiF,QAASnC,WAEfkC,MAAO,oBAAqB,YAEnC,KACApF,QAAQuC,iBAAkB,QAAS,WACjC4B,EAAKxE,MAAMqC,WACTnB,iBAEAlB,WACAC,WAAa,IACbC,UAAY,IACZC,mBAAqB,IACrBC,kBAAoB,IAEpBK,SAASuF,QAASzC,WAEfkC,MAAO,iBAAkB,cAEhC,KACApF,QAAQxB,KAAM,MAAO2F,EAAKhE,KAAK,KAC/BH,QAAQ4F,iBAAkB,SAAU,wFACpC5F,QAAQ4F,iBAAkB,aAAczC,KACxCnD,QAAQ4F,iBAAkB,eAAgBpC,KAC1CxD,QAAQ4F,iBAAkB,YAAazB,EAAK/F,MAC5C4B,QAAQ6F,KAAMpC,EAAcqC,YAItBC,kBAAmB7C,OAC3B,KACF8C,EAAiB/G,KAAKU,MAAM4E,aAC3B9E,QAAS,SAAUc,MAAQ,QAE3BH,SAAS6F,cAAeD,EAAgB/G,KAAKG,YAAaH,KAAKC,0BAE5DkG,MAAOjC,EAAc,KAAOC,EAAc,wCAAyC,QAEvFnE,KAAKG,YAAY4C,gBACZsC,KAAM,uBAAyBrF,KAAKG,YAAY8G,KAAM,OAG3DjH,KAAKC,iBAAiB8C,gBACjBsC,KAAM,4BAA8BrF,KAAKC,iBAAiBgH,KAAM,YAMpEhB,eAGN,MAAOiB,WACAlD,IAAKhE,WACR4B,oBAEAT,SAASiF,QAASpG,KAAKU,MAAM,SAC7BS,SAASuF,QAAS1G,KAAKU,MAAM,SAE7BA,cACAC,WAAa,OACbC,UAAY,OACZC,mBAAqB,OACrBC,kBAAoB,UAEjBqF,MAAOe,EAAK,qEAMjBC,EAAgB,SAAEC,UACd,mBACEpD,IAAK,YACRqD,2BAA4BD,SAI9B,IAAIE,KAAmBtH,KAAKiB,SAAW,KACvCsG,EAAkBzH,SAASC,eAAgBC,KAAKb,GAAK,WAAamI,KAEtDE,oBAAqB,QAAWL,EAAiBG,MACjDhE,iBAAkB,QAAW6D,EAAiBG,4CAM3DtH,KAAKQ,QAAS,gBACZA,QAAS,SAAUiB,MAAMC,QAAU1B,KAAKQ,QAAS,iBAGnDR,KAAKQ,QAAS,0BACZA,QAAS,mBAAoBiB,MAAMC,QAAU,QAG/C1B,KAAKQ,QAAS,sBACZA,QAAS,gBAAiBgH,oBAAqB,QAASxH,KAAKoB,+DAM9DL,QAAQ0G,kDAKRjH,QAAS,SAAUc,MAAQ,GAE5BtB,KAAKQ,QAAS,SAAUc,aACtBd,QAAS,SAAU4D,KAAO,YAC1B5D,QAAS,SAAU4D,KAAO,aAG3B5D,QAAS,UAAWc,MAAQ,QAC5BH,SAASuG,6DAIaC,QACtB1G,SAAS2G,OAAQD,EAAc,QAC/B/B,iEAKApF,QAAS,SAAUiB,MAAMC,QAAU,OAEpC1B,KAAKQ,QAAS,0BACZA,QAAS,mBAAoBiB,MAAMC,QAAU1B,KAAKQ,QAAS,iBAG7DR,KAAKQ,QAAS,sBACZA,QAAS,gBAAiB8C,iBAAkB,QAAStD,KAAKoB,oEAM5DyG,EAAc,GAChBC,SAEG,IAAIR,KAAmBtH,KAAKiB,SAAW,KACvC8G,EAAkB/H,KAAKiB,SAASqG,GAClCU,EAAiBD,EAAgBE,YACjCC,EAAiB,GACjBC,GAAkB,YAAa,YAAa,eAExBjF,KAAM6E,EAAgBpC,gBAExCyC,EAAa,SAAWpI,KAAKmB,SAASkH,YAEtCrI,KAAKmB,SAASmH,kBACJ,UAAYF,GAGtBL,EAAgBQ,SAClBR,EAAgBQ,QAAQH,OACRL,EAAgBQ,QAAQH,QAGrC,IAAII,KAAiBL,EAAiB,KACtCM,EAAgBN,EAAeK,GACjCE,aAEoC,IAAlCD,EAAczK,QAAS,KAAe,KACrC2K,EAAWF,EAAclH,MAAO,KAClCqH,EAAab,EAAgBY,EAAS,KAAO,UAEtCrD,QAELsD,EAAa,KACX,IAAIC,KAAcF,IACTC,EAAWD,EAASE,KAAgB,OAGpCD,GAAc,aAGfb,EAAgBU,IAAkB,QAG/B,iBAAmBA,EAAgB,WAAaA,EAActK,QAAS,SAAU,KAAQ,YAAcuK,EAAc,WAGzH,oDAAsDV,EAAiB,uCAAyCE,EAAiB,oBAAsBlI,KAAKb,GAAK,WAAamI,EAAkB,gBAAkBA,EAAkB,8BAG/O9G,QAAS,UAAWc,MAAQwG,EAAsBb,KAAM,UACxDzG,QAAS,QAASsI,UAAYjB,OAE9BkB"}