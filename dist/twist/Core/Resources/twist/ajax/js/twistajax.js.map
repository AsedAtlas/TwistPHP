{"version":3,"file":"twistajax.js","sources":["../../../../../../../node_modules/form-serialize/index.js","../../../../../../../src/Core/Resources/twist/ajax/js/twistajax.js"],"sourcesContent":["// get successful control from form and assemble into object\n// http://www.w3.org/TR/html401/interact/forms.html#h-17.13.2\n\n// types which indicate a submit action and are not successful controls\n// these will be ignored\nvar k_r_submitter = /^(?:submit|button|image|reset|file)$/i;\n\n// node names which could be successful controls\nvar k_r_success_contrls = /^(?:input|select|textarea|keygen)/i;\n\n// Matches bracket notation.\nvar brackets = /(\\[[^\\[\\]]*\\])/g;\n\n// serializes form fields\n// @param form MUST be an HTMLForm element\n// @param options is an optional argument to configure the serialization. Default output\n// with no options specified is a url encoded string\n//    - hash: [true | false] Configure the output type. If true, the output will\n//    be a js object.\n//    - serializer: [function] Optional serializer function to override the default one.\n//    The function takes 3 arguments (result, key, value) and should return new result\n//    hash and url encoded str serializers are provided with this module\n//    - disabled: [true | false]. If true serialize disabled fields.\n//    - empty: [true | false]. If true serialize empty fields\nfunction serialize(form, options) {\n    if (typeof options != 'object') {\n        options = { hash: !!options };\n    }\n    else if (options.hash === undefined) {\n        options.hash = true;\n    }\n\n    var result = (options.hash) ? {} : '';\n    var serializer = options.serializer || ((options.hash) ? hash_serializer : str_serialize);\n\n    var elements = form && form.elements ? form.elements : [];\n\n    //Object store each radio and set if it's empty or not\n    var radio_store = Object.create(null);\n\n    for (var i=0 ; i<elements.length ; ++i) {\n        var element = elements[i];\n\n        // ingore disabled fields\n        if ((!options.disabled && element.disabled) || !element.name) {\n            continue;\n        }\n        // ignore anyhting that is not considered a success field\n        if (!k_r_success_contrls.test(element.nodeName) ||\n            k_r_submitter.test(element.type)) {\n            continue;\n        }\n\n        var key = element.name;\n        var val = element.value;\n\n        // we can't just use element.value for checkboxes cause some browsers lie to us\n        // they say \"on\" for value when the box isn't checked\n        if ((element.type === 'checkbox' || element.type === 'radio') && !element.checked) {\n            val = undefined;\n        }\n\n        // If we want empty elements\n        if (options.empty) {\n            // for checkbox\n            if (element.type === 'checkbox' && !element.checked) {\n                val = '';\n            }\n\n            // for radio\n            if (element.type === 'radio') {\n                if (!radio_store[element.name] && !element.checked) {\n                    radio_store[element.name] = false;\n                }\n                else if (element.checked) {\n                    radio_store[element.name] = true;\n                }\n            }\n\n            // if options empty is true, continue only if its radio\n            if (val == undefined && element.type == 'radio') {\n                continue;\n            }\n        }\n        else {\n            // value-less fields are ignored unless options.empty is true\n            if (!val) {\n                continue;\n            }\n        }\n\n        // multi select boxes\n        if (element.type === 'select-multiple') {\n            val = [];\n\n            var selectOptions = element.options;\n            var isSelectedOptions = false;\n            for (var j=0 ; j<selectOptions.length ; ++j) {\n                var option = selectOptions[j];\n                var allowedEmpty = options.empty && !option.value;\n                var hasValue = (option.value || allowedEmpty);\n                if (option.selected && hasValue) {\n                    isSelectedOptions = true;\n\n                    // If using a hash serializer be sure to add the\n                    // correct notation for an array in the multi-select\n                    // context. Here the name attribute on the select element\n                    // might be missing the trailing bracket pair. Both names\n                    // \"foo\" and \"foo[]\" should be arrays.\n                    if (options.hash && key.slice(key.length - 2) !== '[]') {\n                        result = serializer(result, key + '[]', option.value);\n                    }\n                    else {\n                        result = serializer(result, key, option.value);\n                    }\n                }\n            }\n\n            // Serialize if no selected options and options.empty is true\n            if (!isSelectedOptions && options.empty) {\n                result = serializer(result, key, '');\n            }\n\n            continue;\n        }\n\n        result = serializer(result, key, val);\n    }\n\n    // Check for all empty radio buttons and serialize them with key=\"\"\n    if (options.empty) {\n        for (var key in radio_store) {\n            if (!radio_store[key]) {\n                result = serializer(result, key, '');\n            }\n        }\n    }\n\n    return result;\n}\n\nfunction parse_keys(string) {\n    var keys = [];\n    var prefix = /^([^\\[\\]]*)/;\n    var children = new RegExp(brackets);\n    var match = prefix.exec(string);\n\n    if (match[1]) {\n        keys.push(match[1]);\n    }\n\n    while ((match = children.exec(string)) !== null) {\n        keys.push(match[1]);\n    }\n\n    return keys;\n}\n\nfunction hash_assign(result, keys, value) {\n    if (keys.length === 0) {\n        result = value;\n        return result;\n    }\n\n    var key = keys.shift();\n    var between = key.match(/^\\[(.+?)\\]$/);\n\n    if (key === '[]') {\n        result = result || [];\n\n        if (Array.isArray(result)) {\n            result.push(hash_assign(null, keys, value));\n        }\n        else {\n            // This might be the result of bad name attributes like \"[][foo]\",\n            // in this case the original `result` object will already be\n            // assigned to an object literal. Rather than coerce the object to\n            // an array, or cause an exception the attribute \"_values\" is\n            // assigned as an array.\n            result._values = result._values || [];\n            result._values.push(hash_assign(null, keys, value));\n        }\n\n        return result;\n    }\n\n    // Key is an attribute name and can be assigned directly.\n    if (!between) {\n        result[key] = hash_assign(result[key], keys, value);\n    }\n    else {\n        var string = between[1];\n        // +var converts the variable into a number\n        // better than parseInt because it doesn't truncate away trailing\n        // letters and actually fails if whole thing is not a number\n        var index = +string;\n\n        // If the characters between the brackets is not a number it is an\n        // attribute name and can be assigned directly.\n        if (isNaN(index)) {\n            result = result || {};\n            result[string] = hash_assign(result[string], keys, value);\n        }\n        else {\n            result = result || [];\n            result[index] = hash_assign(result[index], keys, value);\n        }\n    }\n\n    return result;\n}\n\n// Object/hash encoding serializer.\nfunction hash_serializer(result, key, value) {\n    var matches = key.match(brackets);\n\n    // Has brackets? Use the recursive assignment function to walk the keys,\n    // construct any missing objects in the result tree and make the assignment\n    // at the end of the chain.\n    if (matches) {\n        var keys = parse_keys(key);\n        hash_assign(result, keys, value);\n    }\n    else {\n        // Non bracket notation can make assignments directly.\n        var existing = result[key];\n\n        // If the value has been assigned already (for instance when a radio and\n        // a checkbox have the same name attribute) convert the previous value\n        // into an array before pushing into it.\n        //\n        // NOTE: If this requirement were removed all hash creation and\n        // assignment could go through `hash_assign`.\n        if (existing) {\n            if (!Array.isArray(existing)) {\n                result[key] = [ existing ];\n            }\n\n            result[key].push(value);\n        }\n        else {\n            result[key] = value;\n        }\n    }\n\n    return result;\n}\n\n// urlform encoding serializer\nfunction str_serialize(result, key, value) {\n    // encode newlines as \\r\\n cause the html spec says so\n    value = value.replace(/(\\r)?\\n/g, '\\r\\n');\n    value = encodeURIComponent(value);\n\n    // spaces should be '+' rather than '%20'.\n    value = value.replace(/%20/g, '+');\n    return result + (result ? '&' : '') + encodeURIComponent(key) + '=' + value;\n}\n\nmodule.exports = serialize;\n","/*!\n * TwistPHP - An open source PHP MVC framework built from the ground up.\n * Copyright (C) 2016  Shadow Technologies Ltd.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * @author     Shadow Technologies Ltd. <contact@shadow-technologies.co.uk>\n * @license    https://www.gnu.org/licenses/gpl.html GPL License\n * @link       https://twistphp.com\n */\n\nimport serialize from '../../../../../../node_modules/form-serialize/index';\n\nexport default class twistajax {\n\n\tconstructor( uri ) {\n\t\tthis.uri = uri.replace( /\\/$/, '' );\n\t\tthis.timeout = 10000;\n\t\tthis.cache = false;\n\t\tthis.requests = 0;\n\t\tthis.debug = false;\n\t\t// this.preSuccess = response => { return response };\n\t}\n\n\tset debug( debug ) {\n\t\tif( debug ) {\n\t\t\ttry {\n\t\t\t\tlet args = [\n\t\t\t\t\t'%c %c %c TwistPHP AJAX %c %c ',\n\t\t\t\t\t'font-size: 15px; background: #2a5200;',\n\t\t\t\t\t'font-size: 17px; background: #3f7a00;',\n\t\t\t\t\t'color: #FFF; font-size: 18px; background: #539F00;',\n\t\t\t\t\t'font-size: 17px; background: #3f7a00;',\n\t\t\t\t\t'font-size: 15px; background: #2a5200;'\n\t\t\t\t];\n\n\t\t\t\tconsole.log.apply( console, args );\n\t\t\t} catch( e ) {\n\t\t\t\tif( console.info ) {\n\t\t\t\t\tconsole.info( 'TwistPHP AJAX' );\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log( 'TwistPHP AJAX' );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet instanceData = {\n\t\t\t\turi: this.uri,\n\t\t\t\ttimeout: this.timeout,\n\t\t\t\tcache: this.cache,\n\t\t\t\trequests: this.requests\n\t\t\t};\n\n\t\t\tconsole.log( instanceData );\n\t\t}\n\t}\n\n\tdelete( location, data = {} ) {\n\t\treturn this.send( location, data, 'DELETE' );\n\t}\n\n\tget( location, data = {} ) {\n\t\treturn this.send( location, data, 'GET' );\n\t}\n\n\tpatch( location, data = {} ) {\n\t\treturn this.send( location, data, 'PATCH' );\n\t}\n\n\tpost( location, data = {} ) {\n\t\treturn this.send( location, data, 'POST' );\n\t}\n\n\tput( location, data = {} ) {\n\t\treturn this.send( location, data, 'PUT' );\n\t}\n\n\tpostForm( location, formSelector ) {\n\t\tlet data = serialize( document.querySelector( formSelector ), { empty: true } );\n\t\treturn this.post( location, data );\n\t}\n\n\tsend( location, bodydata = {}, method = 'GET' ) {\n\t\tconsole.info( 'Requests: ' + this.requests );\n\t\treturn new Promise( ( resolve, reject ) => {\n\t\t\tthis.requests++;\n\t\t\tfetch( this.uri + '/' + location, {\n\t\t\t\tmethod: method,\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: 'application/json, text/plain, */*',\n\t\t\t\t\t'Content-Type': 'application/json; charset=utf-8'\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify( bodydata ),\n\t\t\t\tcache: this.cache ? 'default' : 'no-store'\n\t\t\t} )\n\t\t\t\t.then( response => response.json() )\n\t\t\t\t// .then( response => typeof this.preSuccess === 'function' ? this.preSuccess( response ) : response )\n\t\t\t\t.then( response => {\n\t\t\t\t\tthis.requests--;\n\t\t\t\t\tconsole.info( 'Requests: ' + this.requests );\n\n\t\t\t\t\tif( response.status !== true ) {\n\t\t\t\t\t\tthrow( response.message || 'Status returned FALSE' );\n\t\t\t\t\t}\n\n\t\t\t\t\treturn response.data;\n\t\t\t\t} )\n\t\t\t\t.then( response => resolve( response ) )\n\t\t\t\t.catch( e => {\n\t\t\t\t\treject( e );\n\t\t\t\t} );\n\t\t} );\n\t}\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n//OLD\n\n\n// try {\n// \tif( jQuery ) {\n// \t\tvar TwistAJAX = function( strAJAXPostLocation, b, c, d, e, f ) {\n// \t\t\tvar thisTwistAJAX = this,\n// \t\t\t\t\tdebugMode = false,\n// \t\t\t\t\tcontains = function( strNeedle, strHaystack, blCaseSensitive ) {\n// \t\t\t\t\t\tblCaseSensitive = ( typeof blCaseSensitive === 'boolean' ) ? blCaseSensitive : false;\n// \t\t\t\t\t\tif( blCaseSensitive ) {\n// \t\t\t\t\t\t\treturn strHaystack.indexOf( strNeedle ) !== -1;\n// \t\t\t\t\t\t} else {\n// \t\t\t\t\t\t\treturn strHaystack.toLowerCase().indexOf( strNeedle.toLowerCase() ) !== -1;\n// \t\t\t\t\t\t}\n// \t\t\t\t\t},\n// \t\t\t\t\thasOwnProperty = function( objSubject, strProperty ) {\n// \t\t\t\t\t\treturn ( oldIE() && Object.prototype.hasOwnProperty.call( objSubject, strProperty ) ) || objSubject.hasOwnProperty( strProperty );\n// \t\t\t\t\t},\n// \t\t\t\t\tisBlank = function( mxdValue ) {\n// \t\t\t\t\t\treturn mxdValue.replace( /[\\s\\t\\r\\n]*/g, '' ) === '';\n// \t\t\t\t\t},\n// \t\t\t\t\toldIE = function() {\n// \t\t\t\t\t\treturn navigator.userAgent.indexOf( 'MSIE ' );\n// \t\t\t\t\t},\n// \t\t\t\t\terror = function() {\n// \t\t\t\t\t\tif( debugMode ) {\n// \t\t\t\t\t\t\tsudoError( arguments );\n// \t\t\t\t\t\t}\n// \t\t\t\t\t},\n// \t\t\t\t\tsudoError = function() {\n// \t\t\t\t\t\tvar arrArguements = arguments;\n// \t\t\t\t\t\tif( window.twistdebug &&\n// \t\t\t\t\t\t\t\tarrArguements.length > 0 ) {\n// \t\t\t\t\t\t\tfor( var intArguementA in arrArguements ) {\n// \t\t\t\t\t\t\t\twindow.twistdebug.error( arrArguements[intArguementA] );\n// \t\t\t\t\t\t\t}\n// \t\t\t\t\t\t} else if( window.console &&\n// \t\t\t\t\t\t\t\twindow.console.log &&\n// \t\t\t\t\t\t\t\tarrArguements.length > 0 ) {\n// \t\t\t\t\t\t\tfor( var intArguementB in arrArguements ) {\n// \t\t\t\t\t\t\t\twindow.console.log( arrArguements[intArguementB] );\n// \t\t\t\t\t\t\t}\n// \t\t\t\t\t\t}\n// \t\t\t\t\t},\n// \t\t\t\t\tobjectLength = function( objIn ) {\n// \t\t\t\t\t\tvar intLength = 0;\n// \t\t\t\t\t\tif( typeof objIn === 'object' ) {\n// \t\t\t\t\t\t\tfor( var mxdKey in objIn ) {\n// \t\t\t\t\t\t\t\tif( hasOwnProperty( objIn, mxdKey ) ) {\n// \t\t\t\t\t\t\t\t\tintLength++;\n// \t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t}\n// \t\t\t\t\t\t}\n// \t\t\t\t\t\treturn intLength;\n// \t\t\t\t\t},\n// \t\t\t\t\tprettySize = function( intBytes, blUseSpace ) {\n// \t\t\t\t\t\tvar arrLimits = ['B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n// \t\t\t\t\t\t\t\tintLimit = 0;\n// \t\t\t\t\t\twhile( arrLimits[intLimit] &&\n// \t\t\t\t\t\tintBytes > Math.pow( 1024, intLimit + 1 ) ) {\n// \t\t\t\t\t\t\tintLimit++;\n// \t\t\t\t\t\t}\n// \t\t\t\t\t\treturn round( intBytes / Math.pow( 1024, intLimit ), 2 ) + ( typeof blUseSpace === 'boolean' && blUseSpace ? ' ' : '' ) + arrLimits[intLimit];\n// \t\t\t\t\t},\n// \t\t\t\t\tround = function( intNumber, intDP ) {\n// \t\t\t\t\t\tintDP = ( typeof intDP !== 'number' ) ? 0 : intDP;\n// \t\t\t\t\t\treturn intDP === 0 ? parseInt( Math.round( intNumber * Math.pow( 10, intDP ) ) / Math.pow( 10, intDP ) ) : parseFloat( Math.round( intNumber * Math.pow( 10, intDP ) ) / Math.pow( 10, intDP ) );\n// \t\t\t\t\t},\n// \t\t\t\t\tserializeJSON = function( jqoForm ) {\n// \t\t\t\t\t\tvar objJSON = {},\n// \t\t\t\t\t\t\t\tarrFormElements = [];\n//\n// \t\t\t\t\t\tjQuery.map( jqoForm.serializeArray(),\n// \t\t\t\t\t\t\t\tfunction( arrElement, intIndex ) {\n// \t\t\t\t\t\t\t\t\tarrFormElements.push( {name: arrElement.name, value: arrElement.value} );\n// \t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t);\n//\n// \t\t\t\t\t\tjqoForm.find( 'input[type=\"submit\"][name][value], input[type=\"reset\"][name][value], input[type=\"button\"][name][value], button[name][value]' ).each(\n// \t\t\t\t\t\t\t\tfunction() {\n// \t\t\t\t\t\t\t\t\tvar jqoElement = $( this );\n// \t\t\t\t\t\t\t\t\tarrFormElements.push( {name: jqoElement.attr( 'name' ), value: jqoElement.val()} );\n// \t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t);\n//\n// \t\t\t\t\t\tvar returnNameObject = function( strFullName, strNameSoFar, strName, mxdValue ) {\n// \t\t\t\t\t\t\tvar objOut = {},\n// \t\t\t\t\t\t\t\t\tarrNameMatches = strName.match( /^(\\[([^\\[]*)\\])((\\[[^\\[]*\\])*)$/i );\n//\n// \t\t\t\t\t\t\tif( arrNameMatches ) {\n// \t\t\t\t\t\t\t\tvar strThisKey = arrNameMatches[2];\n//\n// \t\t\t\t\t\t\t\tif( isBlank( strThisKey ) ) {\n// \t\t\t\t\t\t\t\t\tvar intKey = 1,\n// \t\t\t\t\t\t\t\t\t\t\tblKeyExists = true;\n//\n// \t\t\t\t\t\t\t\t\tdo {\n// \t\t\t\t\t\t\t\t\t\tvar blKeyFree = true;\n// \t\t\t\t\t\t\t\t\t\tfor( var intFormElement in arrFormElements ) {\n// \t\t\t\t\t\t\t\t\t\t\tif( contains( strNameSoFar + '[' + intKey + ']', arrFormElements[intFormElement].name ) ) {\n// \t\t\t\t\t\t\t\t\t\t\t\tintKey++;\n// \t\t\t\t\t\t\t\t\t\t\t\tblKeyFree = false;\n// \t\t\t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t\t\t}\n//\n// \t\t\t\t\t\t\t\t\t\tif( blKeyFree ) {\n// \t\t\t\t\t\t\t\t\t\t\tvar blKeyReplaced = false;\n//\n// \t\t\t\t\t\t\t\t\t\t\tfor( var intFormElement2 in arrFormElements ) {\n// \t\t\t\t\t\t\t\t\t\t\t\tif( !blKeyReplaced &&\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tarrFormElements[intFormElement2].name === strNameSoFar + '[]' &&\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tarrFormElements[intFormElement2].value === mxdValue ) {\n// \t\t\t\t\t\t\t\t\t\t\t\t\tarrFormElements[intFormElement2].name = strNameSoFar + '[' + intKey + ']';\n// \t\t\t\t\t\t\t\t\t\t\t\t\tblKeyReplaced = true;\n// \t\t\t\t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t\t\t\t}\n//\n// \t\t\t\t\t\t\t\t\t\t\tblKeyExists = false;\n// \t\t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t\t} while( blKeyExists );\n//\n// \t\t\t\t\t\t\t\t\tstrThisKey = intKey;\n// \t\t\t\t\t\t\t\t}\n//\n// \t\t\t\t\t\t\t\tif( arrNameMatches[3] ) {\n// \t\t\t\t\t\t\t\t\tobjOut[strThisKey] = returnNameObject( strFullName, strNameSoFar + '[' + strThisKey + ']', arrNameMatches[3], mxdValue );\n// \t\t\t\t\t\t\t\t} else {\n// \t\t\t\t\t\t\t\t\tobjOut[strThisKey] = mxdValue;\n// \t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t}\n//\n// \t\t\t\t\t\t\treturn objOut;\n// \t\t\t\t\t\t};\n//\n// \t\t\t\t\t\t$.each( arrFormElements,\n// \t\t\t\t\t\t\t\tfunction( intIndex, arrFormElement ) {\n// \t\t\t\t\t\t\t\t\tvar arrNameMatches = arrFormElement.name.match( /^([^\\[]+)((\\[[^\\[]*\\])+)$/i );\n//\n// \t\t\t\t\t\t\t\t\tif( arrNameMatches ) {\n// \t\t\t\t\t\t\t\t\t\tvar objThisName = {};\n// \t\t\t\t\t\t\t\t\t\tobjThisName[arrNameMatches[1]] = returnNameObject( arrFormElement.name, arrNameMatches[1], arrNameMatches[2], arrFormElement.value );\n//\n// \t\t\t\t\t\t\t\t\t\tobjJSON = $.extend( true, objJSON, objThisName );\n// \t\t\t\t\t\t\t\t\t} else {\n// \t\t\t\t\t\t\t\t\t\tobjJSON[arrFormElement.name] = arrFormElement.value;\n// \t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t);\n//\n// \t\t\t\t\t\treturn objJSON;\n// \t\t\t\t\t},\n// \t\t\t\t\tfunMasterCallbackSuccess = function() {},\n// \t\t\t\t\tfunMasterCallbackFailure = function() {},\n// \t\t\t\t\tobjDefaultData = {},\n// \t\t\t\t\tintMasterTimeout = 10000,\n// \t\t\t\t\tstrLoaderSize = 'medium',\n// \t\t\t\t\tblCache = false,\n// \t\t\t\t\tblShowLoader = true,\n// \t\t\t\t\tsend = function( strFunction, strMethod, blCache, b, c, d, e ) {\n// \t\t\t\t\t\tthisTwistAJAX.count++;\n// \t\t\t\t\t\tstrMethod = ( typeof strMethod === 'string' ) ? strMethod : 'POST';\n//\n// \t\t\t\t\t\t$( '#twist-ajax-loader-size' ).text( 'Loading...' );\n//\n// \t\t\t\t\t\tif( thisTwistAJAX.count > 1 ) {\n// \t\t\t\t\t\t\t$( '#twist-ajax-loader-count' ).text( thisTwistAJAX.count );\n// \t\t\t\t\t\t}\n//\n// \t\t\t\t\t\tif( blShowLoader ) {\n// \t\t\t\t\t\t\t$( '#twist-ajax-loader' ).stop().show().fadeTo( 0, 1 );\n// \t\t\t\t\t\t}\n//\n// \t\t\t\t\t\tvar objData = {},\n// \t\t\t\t\t\t\t\tintTimeout = intMasterTimeout,\n// \t\t\t\t\t\t\t\tfunCallbackSuccess = function() {},\n// \t\t\t\t\t\t\t\tfunCallbackFailure = function() {};\n//\n// \t\t\t\t\t\tif( typeof b === 'object' ||\n// \t\t\t\t\t\t\t\t( typeof b === 'string' &&\n// \t\t\t\t\t\t\t\t( /^\\#[0-9a-z_\\-]+$/i ).test( b ) &&\n// \t\t\t\t\t\t\t\t( $( b ) instanceof jQuery ||\n// \t\t\t\t\t\t\t\tb.jquery ) ) ) {\n// \t\t\t\t\t\t\tif( typeof b === 'object' ) {\n// \t\t\t\t\t\t\t\tif( b instanceof jQuery ||\n// \t\t\t\t\t\t\t\t\t\tb.jquery ) {\n// \t\t\t\t\t\t\t\t\tobjData = serializeJSON( b );\n// \t\t\t\t\t\t\t\t} else {\n// \t\t\t\t\t\t\t\t\tobjData = ( objectLength( b ) === 0 ) ? objData : b;\n// \t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t} else {\n// \t\t\t\t\t\t\t\tobjData = serializeJSON( $( b ) );\n// \t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\tif( typeof c === 'number' ) {\n// \t\t\t\t\t\t\t\tintTimeout = c;\n// \t\t\t\t\t\t\t\tif( typeof d === 'function' ) {\n// \t\t\t\t\t\t\t\t\tfunCallbackSuccess = d;\n// \t\t\t\t\t\t\t\t\tif( typeof e === 'function' ) {\n// \t\t\t\t\t\t\t\t\t\tfunCallbackFailure = e;\n// \t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t} else if( typeof c === 'function' ) {\n// \t\t\t\t\t\t\t\tfunCallbackSuccess = c;\n// \t\t\t\t\t\t\t\tif( typeof d === 'function' ) {\n// \t\t\t\t\t\t\t\t\tfunCallbackFailure = d;\n// \t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t}\n// \t\t\t\t\t\t} else if( typeof b === 'number' ) {\n// \t\t\t\t\t\t\tintTimeout = b;\n// \t\t\t\t\t\t\tif( typeof c === 'function' ) {\n// \t\t\t\t\t\t\t\tfunCallbackSuccess = c;\n// \t\t\t\t\t\t\t\tif( typeof d === 'function' ) {\n// \t\t\t\t\t\t\t\t\tfunCallbackFailure = d;\n// \t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t}\n// \t\t\t\t\t\t} else if( typeof b === 'function' ) {\n// \t\t\t\t\t\t\tfunCallbackSuccess = b;\n// \t\t\t\t\t\t\tif( typeof c === 'function' ) {\n// \t\t\t\t\t\t\t\tfunCallbackFailure = c;\n// \t\t\t\t\t\t\t}\n// \t\t\t\t\t\t}\n//\n// \t\t\t\t\t\tvar strFinalURL = strAJAXPostLocation + '/' + strFunction.replace( /^\\//, '' ),\n// \t\t\t\t\t\t\t\tobjAJAXRequest = {\n// \t\t\t\t\t\t\t\t\ttype: strMethod.toUpperCase(),\n// \t\t\t\t\t\t\t\t\turl: strFinalURL,\n// \t\t\t\t\t\t\t\t\tdata: objData,\n// \t\t\t\t\t\t\t\t\tdataType: 'json',\n// \t\t\t\t\t\t\t\t\ttimeout: intTimeout,\n// \t\t\t\t\t\t\t\t\tglobal: true,\n// \t\t\t\t\t\t\t\t\tcache: blCache,\n// \t\t\t\t\t\t\t\t\tcomplete: function( jqXHR, strStatusText ) {\n// \t\t\t\t\t\t\t\t\t\tthisTwistAJAX.count--;\n//\n// \t\t\t\t\t\t\t\t\t\tif( thisTwistAJAX.count === 0 ) {\n// \t\t\t\t\t\t\t\t\t\t\t$( '#twist-ajax-loader' ).stop().fadeTo( 200, 0,\n// \t\t\t\t\t\t\t\t\t\t\t\t\tfunction() {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t$( this ).hide();\n// \t\t\t\t\t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t\t\t\t);\n// \t\t\t\t\t\t\t\t\t\t} else {\n// \t\t\t\t\t\t\t\t\t\t\t$( '#twist-ajax-loader-count' ).text( thisTwistAJAX.count > 1 ? thisTwistAJAX.count : '' );\n// \t\t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t\t},\n// \t\t\t\t\t\t\t\t\tsuccess: function( objResponse, strStatusText, jqXHR ) {\n// \t\t\t\t\t\t\t\t\t\tvar strContentLength = prettySize( jqXHR.getResponseHeader( 'Content-Length' ) );\n// \t\t\t\t\t\t\t\t\t\t$( '#twist-ajax-loader-size' ).text( 'Downloading ' + strContentLength + '...' );\n// \t\t\t\t\t\t\t\t\t\tif( objResponse &&\n// \t\t\t\t\t\t\t\t\t\t\t\ttypeof objResponse === 'object' &&\n// \t\t\t\t\t\t\t\t\t\t\t\thasOwnProperty( objResponse, 'status' ) &&\n// \t\t\t\t\t\t\t\t\t\t\t\tobjResponse.status === true ) {\n// \t\t\t\t\t\t\t\t\t\t\tfunCallbackSuccessEnd( objResponse, objAJAXRequest );\n// \t\t\t\t\t\t\t\t\t\t} else {\n// \t\t\t\t\t\t\t\t\t\t\tfunCallbackFailureEnd( objResponse, objAJAXRequest );\n// \t\t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t\t},\n// \t\t\t\t\t\t\t\t\terror: function( jqXHR, strStatusText, strError ) {\n// \t\t\t\t\t\t\t\t\t\tswitch( strStatusText ) {\n// \t\t\t\t\t\t\t\t\t\t\tcase 'abort':\n// \t\t\t\t\t\t\t\t\t\t\t\tfunCallbackFailureEnd( {}, objAJAXRequest );\n// \t\t\t\t\t\t\t\t\t\t\t\t$( '#twist-ajax-loader-size' ).text( 'Aborted' );\n// \t\t\t\t\t\t\t\t\t\t\t\terror( 'The AJAX request was aborted' );\n// \t\t\t\t\t\t\t\t\t\t\t\tbreak;\n//\n// \t\t\t\t\t\t\t\t\t\t\tcase 'timeout':\n// \t\t\t\t\t\t\t\t\t\t\t\tfunCallbackFailureEnd( {}, objAJAXRequest );\n// \t\t\t\t\t\t\t\t\t\t\t\t$( '#twist-ajax-loader-size' ).text( 'Timeout' );\n// \t\t\t\t\t\t\t\t\t\t\t\terror( 'The AJAX request timed out' );\n// \t\t\t\t\t\t\t\t\t\t\t\tbreak;\n//\n// \t\t\t\t\t\t\t\t\t\t\tcase 'parsererror':\n// \t\t\t\t\t\t\t\t\t\t\t\tvar rexJSON = /{\"status\":(true|false),\"message\":\"[^\"]*\",\"data\":({.*}|\\[\\])(,\"[^\"]+\":(true|false|(\"[^\"]*\")|({.*}|\\[\\])))*(,\"debug\":({.*}|\\[\\])(,\"[^\"]+\":(true|false|(\"[^\"]*\")|({.*}|\\[\\])))*)?}/,\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tstrContentLength = prettySize( jqXHR.getResponseHeader( 'Content-Length' ) ),\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tstrSeperator = '===============================================';\n//\n// \t\t\t\t\t\t\t\t\t\t\t\tif( rexJSON.test( jqXHR.responseText ) ) {\n// \t\t\t\t\t\t\t\t\t\t\t\t\tif( window.twistdebug ) {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsudoError( strSeperator + '<br>PARSER ERROR RECOVERY<br>' + strSeperator + '<br>Date:             ' + jqXHR.getResponseHeader( 'Date' ) + '<br>Location:         ' + strFinalURL + '<br>Timeout:          ' + ( intTimeout / 1000 ) + 's<br>Response length:  ' + strContentLength + ( ( typeof JSON !== 'undefined' ) ? '<br>Post data:        ' + JSON.stringify( objData ) : '{}' ) + '<br>' + strSeperator );\n// \t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tsudoError( strSeperator + '\\nPARSER ERROR RECOVERY\\n' + strSeperator + '\\nDate:             ' + jqXHR.getResponseHeader( 'Date' ) + '\\nLocation:         ' + strFinalURL + '\\nTimeout:          ' + ( intTimeout / 1000 ) + 's\\nResponse length:  ' + strContentLength + ( ( typeof JSON !== 'undefined' ) ? '\\nPost data:        ' + JSON.stringify( objData ) : '{}' ) + '\\n' + strSeperator );\n// \t\t\t\t\t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t\t\t\t\t\tvar strResponse = jqXHR.responseText.match( rexJSON )[0];\n// \t\t\t\t\t\t\t\t\t\t\t\t\tif( $.parseJSON( strResponse ) !== null ) {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tvar objResponse = $.parseJSON( strResponse );\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tif( typeof objResponse === 'object' &&\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'status' in objResponse &&\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tobjResponse.status === true ) {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfunCallbackSuccessEnd( objResponse, objAJAXRequest );\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfunCallbackFailureEnd( objResponse, objAJAXRequest );\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tfunCallbackFailureEnd( {}, objAJAXRequest );\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\ttry {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthisTwistAJAX.onfail( strError );\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t} catch( err ) {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t\terror( err );\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t\t\t\t\t} else {\n// \t\t\t\t\t\t\t\t\t\t\t\t\tsudoError( 'Parse error' );\n// \t\t\t\t\t\t\t\t\t\t\t\t\tfunCallbackFailureEnd( {}, objAJAXRequest );\n// \t\t\t\t\t\t\t\t\t\t\t\t\ttry {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\tthisTwistAJAX.onfail( strError );\n// \t\t\t\t\t\t\t\t\t\t\t\t\t} catch( err ) {\n// \t\t\t\t\t\t\t\t\t\t\t\t\t\terror( err );\n// \t\t\t\t\t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t\t\t\t\tbreak;\n//\n// \t\t\t\t\t\t\t\t\t\t\t//case 'error':\n// \t\t\t\t\t\t\t\t\t\t\tdefault:\n// \t\t\t\t\t\t\t\t\t\t\t\tfunCallbackFailureEnd( {}, objAJAXRequest );\n// \t\t\t\t\t\t\t\t\t\t\t\t$( '#twist-ajax-loader-size' ).text( 'Error' );\n// \t\t\t\t\t\t\t\t\t\t\t\ttry {\n// \t\t\t\t\t\t\t\t\t\t\t\t\tthisTwistAJAX.onfail( strError );\n// \t\t\t\t\t\t\t\t\t\t\t\t} catch( err ) {\n// \t\t\t\t\t\t\t\t\t\t\t\t\terror( err );\n// \t\t\t\t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t\t\t\t\tbreak;\n// \t\t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t},\n// \t\t\t\t\t\t\t\tfunCallbackSuccessEnd = function( objResponse, objRequest ) {\n// \t\t\t\t\t\t\t\t\ttry {\n// \t\t\t\t\t\t\t\t\t\tfunCallbackSuccess.call( objResponse, objRequest );\n// \t\t\t\t\t\t\t\t\t\tfunMasterCallbackSuccess.call( objResponse, objRequest );\n// \t\t\t\t\t\t\t\t\t\tif( window.twistdebug ) {\n// \t\t\t\t\t\t\t\t\t\t\twindow.twistdebug.logAJAX( true, objResponse, objRequest );\n// \t\t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t\t} catch( err ) {\n// \t\t\t\t\t\t\t\t\t\terror( err );\n// \t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t},\n// \t\t\t\t\t\t\t\tfunCallbackFailureEnd = function( objResponse, objRequest ) {\n// \t\t\t\t\t\t\t\t\ttry {\n// \t\t\t\t\t\t\t\t\t\tfunCallbackFailure.call( objResponse, objRequest );\n// \t\t\t\t\t\t\t\t\t\tfunMasterCallbackFailure.call( objResponse, objRequest );\n// \t\t\t\t\t\t\t\t\t\tif( window.twistdebug ) {\n// \t\t\t\t\t\t\t\t\t\t\twindow.twistdebug.logAJAX( false, objResponse, objRequest );\n// \t\t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t\t} catch( err ) {\n// \t\t\t\t\t\t\t\t\t\terror( err );\n// \t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t};\n//\n// \t\t\t\t\t\t$.each( thisTwistAJAX.defaultArray,\n// \t\t\t\t\t\t\t\tfunction( strIndex, mxdValue ) {\n// \t\t\t\t\t\t\t\t\tobjData[strIndex] = mxdValue;\n// \t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t);\n//\n// \t\t\t\t\t\tobjAJAXRequest.data = objData;\n//\n// \t\t\t\t\t\treturn $.ajax( objAJAXRequest );\n// \t\t\t\t\t};\n//\n// \t\t\tif( typeof strAJAXPostLocation !== 'string' ||\n// \t\t\t\t\tstrAJAXPostLocation === '' ) {\n// \t\t\t\tthrow new Error( 'Please specify an AJAX URI' );\n// \t\t\t} else {\n// \t\t\t\tstrAJAXPostLocation = strAJAXPostLocation.replace( /\\/$/, '' );\n// \t\t\t}\n//\n// \t\t\tif( typeof b === 'function' ) {\n// \t\t\t\tfunMasterCallbackSuccess = b;\n// \t\t\t\tif( typeof c === 'function' ) {\n// \t\t\t\t\tfunMasterCallbackFailure = c;\n// \t\t\t\t\tif( typeof d === 'object' ) {\n// \t\t\t\t\t\tobjDefaultData = d;\n// \t\t\t\t\t\tif( typeof e === 'number' ) {\n// \t\t\t\t\t\t\tintMasterTimeout = e;\n// \t\t\t\t\t\t\tif( typeof f === 'string' ) {\n// \t\t\t\t\t\t\t\tstrLoaderSize = f;\n// \t\t\t\t\t\t\t}\n// \t\t\t\t\t\t} else if( typeof e === 'string' ) {\n// \t\t\t\t\t\t\tstrLoaderSize = e;\n// \t\t\t\t\t\t}\n// \t\t\t\t\t} else if( typeof d === 'number' ) {\n// \t\t\t\t\t\tintMasterTimeout = d;\n// \t\t\t\t\t\tif( typeof e === 'string' ) {\n// \t\t\t\t\t\t\tstrLoaderSize = e;\n// \t\t\t\t\t\t}\n// \t\t\t\t\t} else if( typeof d === 'string' ) {\n// \t\t\t\t\t\tstrLoaderSize = d;\n// \t\t\t\t\t}\n// \t\t\t\t} else if( typeof c === 'object' ) {\n// \t\t\t\t\tobjDefaultData = c;\n// \t\t\t\t\tif( typeof d === 'number' ) {\n// \t\t\t\t\t\tintMasterTimeout = d;\n// \t\t\t\t\t\tif( typeof e === 'string' ) {\n// \t\t\t\t\t\t\tstrLoaderSize = e;\n// \t\t\t\t\t\t}\n// \t\t\t\t\t} else if( typeof d === 'string' ) {\n// \t\t\t\t\t\tstrLoaderSize = d;\n// \t\t\t\t\t}\n// \t\t\t\t} else if( typeof c === 'number' ) {\n// \t\t\t\t\tintMasterTimeout = c;\n// \t\t\t\t\tif( typeof d === 'string' ) {\n// \t\t\t\t\t\tstrLoaderSize = d;\n// \t\t\t\t\t}\n// \t\t\t\t} else if( typeof c === 'string' ) {\n// \t\t\t\t\tstrLoaderSize = c;\n// \t\t\t\t}\n// \t\t\t} else if( typeof b === 'object' ) {\n// \t\t\t\tobjDefaultData = b;\n// \t\t\t\tif( typeof c === 'number' ) {\n// \t\t\t\t\tintMasterTimeout = c;\n// \t\t\t\t\tif( typeof d === 'string' ) {\n// \t\t\t\t\t\tstrLoaderSize = d;\n// \t\t\t\t\t}\n// \t\t\t\t} else if( typeof c === 'string' ) {\n// \t\t\t\t\tstrLoaderSize = c;\n// \t\t\t\t}\n// \t\t\t} else if( typeof b === 'number' ) {\n// \t\t\t\tintMasterTimeout = b;\n// \t\t\t\tif( typeof c === 'string' ) {\n// \t\t\t\t\tstrLoaderSize = c;\n// \t\t\t\t}\n// \t\t\t} else if( typeof b === 'string' ) {\n// \t\t\t\tstrLoaderSize = b;\n// \t\t\t}\n//\n// \t\t\t$.ajaxSetup(\n// \t\t\t\t{\n// \t\t\t\t\turl: strAJAXPostLocation,\n// \t\t\t\t\ttimeout: intMasterTimeout\n// \t\t\t\t}\n// \t\t\t);\n//\n// \t\t\t/**\n// \t\t\t * Number of active AJAX requests\n// \t\t\t * @type {number}\n// \t\t\t */\n// \t\t\tthis.count = 0;\n//\n// \t\t\t/**\n// \t\t\t *\n// \t\t\t * @param blEnable\n// \t\t\t */\n// \t\t\tthis.debug = function( blEnable ) {\n// \t\t\t\tdebugMode = ( blEnable !== false );\n// \t\t\t\treturn thisTwistAJAX;\n// \t\t\t};\n//\n// \t\t\t/**\n// \t\t\t *\n// \t\t\t * @type {{}}\n// \t\t\t */\n// \t\t\tthis.defaultArray = objDefaultData;\n//\n// \t\t\t/**\n// \t\t\t *\n// \t\t\t * @param strFunction\n// \t\t\t * @param b\n// \t\t\t * @param c\n// \t\t\t * @param d\n// \t\t\t * @param e\n// \t\t\t * @returns {TwistAJAX.twistajax}\n// \t\t\t */\n// \t\t\tthis.delete = function( strFunction, b, c, d, e ) {\n// \t\t\t\tif( strFunction ) {\n// \t\t\t\t\tsend( strFunction, 'DELETE', blCache, b, c, d, e );\n// \t\t\t\t}\n// \t\t\t\treturn thisTwistAJAX;\n// \t\t\t};\n//\n// \t\t\t/**\n// \t\t\t *\n// \t\t\t * @returns {TwistAJAX.twistajax}\n// \t\t\t */\n// \t\t\tthis.disableCache = function() {\n// \t\t\t\tblCache = false;\n// \t\t\t\treturn thisTwistAJAX;\n// \t\t\t};\n//\n// \t\t\t/**\n// \t\t\t *\n// \t\t\t * @returns {TwistAJAX.twistajax}\n// \t\t\t */\n// \t\t\tthis.disableLoader = function() {\n// \t\t\t\tblShowLoader = false;\n// \t\t\t\treturn thisTwistAJAX;\n// \t\t\t};\n//\n// \t\t\t/**\n// \t\t\t *\n// \t\t\t * @returns {TwistAJAX.twistajax}\n// \t\t\t */\n// \t\t\tthis.enableCache = function() {\n// \t\t\t\tblCache = true;\n// \t\t\t\treturn thisTwistAJAX;\n// \t\t\t};\n//\n// \t\t\t/**\n// \t\t\t *\n// \t\t\t * @returns {TwistAJAX.twistajax}\n// \t\t\t */\n// \t\t\tthis.enableLoader = function() {\n// \t\t\t\tblShowLoader = true;\n// \t\t\t\treturn thisTwistAJAX;\n// \t\t\t};\n//\n// \t\t\t/**\n// \t\t\t *\n// \t\t\t * @param strFunction\n// \t\t\t * @param b\n// \t\t\t * @param c\n// \t\t\t * @param d\n// \t\t\t * @param e\n// \t\t\t * @returns {TwistAJAX.twistajax}\n// \t\t\t */\n// \t\t\tthis.get = function( strFunction, b, c, d, e ) {\n// \t\t\t\tif( strFunction ) {\n// \t\t\t\t\tsend( strFunction, 'GET', blCache, b, c, d, e );\n// \t\t\t\t}\n// \t\t\t\treturn thisTwistAJAX;\n// \t\t\t};\n//\n// \t\t\t/**\n// \t\t\t *\n// \t\t\t * @param strSize\n// \t\t\t * @returns {TwistAJAX.twistajax}\n// \t\t\t */\n// \t\t\tthis.loaderSize = function( strSize ) {\n// \t\t\t\tif( $( '#twist-ajax-loader' ).length ) {\n// \t\t\t\t\t$( '#twist-ajax-loader' ).attr( 'class', '' ).addClass( strSize );\n// \t\t\t\t}\n//\n// \t\t\t\tstrLoaderSize = strSize;\n//\n// \t\t\t\treturn thisTwistAJAX;\n// \t\t\t};\n//\n// \t\t\t/**\n// \t\t\t *\n// \t\t\t * @param strMessage\n// \t\t\t * @returns {TwistAJAX.twistajax}\n// \t\t\t */\n// \t\t\tthis.onfail = function( strMessage ) {\n// \t\t\t\tvar strErrorMessage = ( typeof strMessage === 'string' && strMessage !== '' ) ? strMessage : 'An unexpected AJAX response was given';\n// \t\t\t\terror( strErrorMessage );\n//\n// \t\t\t\treturn thisTwistAJAX;\n// \t\t\t};\n//\n// \t\t\t/**\n// \t\t\t *\n// \t\t\t * @param strFunction\n// \t\t\t * @param b\n// \t\t\t * @param c\n// \t\t\t * @param d\n// \t\t\t * @param e\n// \t\t\t * @returns {TwistAJAX.twistajax}\n// \t\t\t */\n// \t\t\tthis.patch = function( strFunction, b, c, d, e ) {\n// \t\t\t\tsend( strFunction, 'PATCH', blCache, b, c, d, e );\n// \t\t\t\treturn thisTwistAJAX;\n// \t\t\t};\n//\n// \t\t\t/**\n// \t\t\t *\n// \t\t\t * @param strFunction\n// \t\t\t * @param b\n// \t\t\t * @param c\n// \t\t\t * @param d\n// \t\t\t * @param e\n// \t\t\t * @returns {TwistAJAX.twistajax}\n// \t\t\t */\n// \t\t\tthis.post = function( strFunction, b, c, d, e ) {\n// \t\t\t\tif( strFunction ) {\n// \t\t\t\t\tsend( strFunction, 'POST', blCache, b, c, d, e );\n// \t\t\t\t}\n// \t\t\t\treturn thisTwistAJAX;\n// \t\t\t};\n//\n// \t\t\t/**\n// \t\t\t *\n// \t\t\t * @param strFunction\n// \t\t\t * @param b\n// \t\t\t * @param c\n// \t\t\t * @param d\n// \t\t\t * @param e\n// \t\t\t * @returns {TwistAJAX.twistajax}\n// \t\t\t */\n// \t\t\tthis.put = function( strFunction, b, c, d, e ) {\n// \t\t\t\tif( strFunction ) {\n// \t\t\t\t\tsend( strFunction, 'PUT', blCache, b, c, d, e );\n// \t\t\t\t}\n// \t\t\t\treturn thisTwistAJAX;\n// \t\t\t};\n//\n// \t\t\t$( document ).ready(\n// \t\t\t\t\tfunction() {\n// \t\t\t\t\t\tif( !$( '#twist-ajax-loader' ).length ) {\n// \t\t\t\t\t\t\t$( 'body' ).prepend( '<div id=\"twist-ajax-loader\" class=\"' + strLoaderSize + '\"><span id=\"twist-ajax-loader-count\"></span><span id=\"twist-ajax-loader-size\"></span></div>' );\n// \t\t\t\t\t\t}\n// \t\t\t\t\t}\n// \t\t\t);\n//\n// \t\t\treturn true;\n// \t\t};\n//\n// \t\treturn TwistAJAX;\n// \t} else {\n// \t\tthrow 'Twist AJAX requires jQuery to run';\n// \t}\n// } catch( err ) {\n// \tif( window.twistdebug ) {\n// \t\twindow.twistdebug.error( err );\n// \t} else if( window.console &&\n// \t\t\twindow.console.log ) {\n// \t\tconsole.error( err );\n// \t}\n// }"],"names":["parse_keys","string","keys","prefix","children","RegExp","brackets","match","exec","push","hash_assign","result","value","length","key","shift","between","Array","isArray","_values","index","isNaN","hash_serializer","existing","str_serialize","replace","encodeURIComponent","k_r_submitter","k_r_success_contrls","form","options","hash","undefined","serializer","elements","radio_store","Object","create","i","element","disabled","name","test","nodeName","type","val","checked","empty","selectOptions","isSelectedOptions","j","option","allowedEmpty","hasValue","selected","slice","uri","timeout","cache","requests","debug","location","data","this","send","formSelector","serialize","document","querySelector","post","bodydata","method","info","Promise","resolve","reject","_this","JSON","stringify","then","response","json","status","message","catch","e","args","log","apply","console","instanceData"],"mappings":"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"}